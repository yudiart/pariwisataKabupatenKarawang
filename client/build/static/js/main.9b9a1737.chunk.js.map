{"version":3,"sources":["assets/SpinnerInterwind.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/room.js","reducers/villa.js","reducers/admin.js","reducers/cart.js","reducers/index.js","store.js","routing/PrivateRoute.js","assets/style/useStyle.js","assets/style/dashStyles.js","components/Dashboard/main/admin/pages/DashboardDisplayAdmin.js","components/Alert/Alerts.js","actions/room.js","assets/style/fileUpload.js","components/Dashboard/main/upload/FileUpload.js","components/Dashboard/main/villa/Rooms/RoomForms.js","components/Dashboard/main/admin/MainAdmin.js","actions/question.js","components/Dashboard/main/villa/pages/DashboardDisplayVilla.js","components/Dashboard/main/villa/settings/Settings.js","components/Dashboard/main/villa/MainVilla.js","components/Dashboard/main/DashboardMain.js","components/Dashboard/SidebarDashboard.js","views/Dashboard/Dashboard.js","views/Home/Register/Register.js","actions/profile.js","assets/Spinner.js","views/profile/CreateProfile.js","views/Home/Login/Login.js","routing/Routes.js","components/Header/nav/Navbar.js","components/layout/footer/Footer.js","components/layout/main/card/Card.js","components/layout/main/HomeDisplay.js","components/Header/Header.js","views/Home/Home.js","actions/villa.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","logout","history","to","initialState","getItem","isAuthenticated","loading","location","user","profile","profiles","repos","error","initalState","posts","post","rooms","room","image","success","villa","likes","villas","customers","customer","users","carts","item","combineReducers","alert","state","action","filter","auth","removeItem","setItem","map","_id","comments","comment","cart","count","kamar","img","admin","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","connect","Component","component","rest","match","render","props","useStyle","makeStyles","theme","textColor","color","backdrop","zIndex","drawer","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","paper","background","padding","marginTop","flexDirection","search","position","borderRadius","shape","backgroundColor","fade","palette","white","minWidth","transition","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transitions","create","sectionDesktop","sectionMobile","root","maxWidth","media","paddingTop","expand","transform","duration","shortest","expandOpen","avatar","red","orange","getContrastText","deepOrange","purple","deepPurple","form","submit","margin","backgroundHeader","secondary","light","minHeight","headerImage","contrastText","footer","grey","dashStyles","navlink","textDecoration","listStyle","appBar","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","mixins","content","paddingBottom","DashboardDisplayAdmin","classes","classess","Grid","container","className","xs","lg","md","Paper","elevation","alerts","length","key","style","marginBottom","Alert","variant","severity","addRoom","formData","idR","put","response","statusText","status","fileUpload","drop","border","cursor","thumbsContainer","flexWrap","thumb","boxSizing","thumbInner","overflow","objectFit","thumbs","getFiles","file","index","alt","size","src","preview","getRoot","getInput","textStyle","fontSize","textAlign","textField","selectEmpty","button","limitRoom","value","RoomType","cekbok","typeBed","useState","files","setFiles","uploadFile","setUploadFile","uploadPercentage","setUploadPercentage","useDropzone","accept","maxSize","onDrop","acceptedFiles","forEach","reader","FileReader","onabort","console","log","onload","e","preventDefault","result","FormData","append","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","ress","images","readAsArrayBuffer","Object","assign","URL","createObjectURL","getRootProps","getInputProps","roomNameValue","setRoomNameValue","descriptionValue","setDescriptionValue","acValue","setAcValue","tvValue","settvValue","bedtypeValue","setbedtypeValue","wifiValue","setwifiValue","otherValue","hargaValue","sethargaValue","limitValue","setLimitValue","tipeKamarValue","setTipeKamarValue","onSubmit","roomName","description","harga","limit","tipeKamar","ac","tv","bedtype","wifi","other","useEffect","revokeObjectURL","noValidate","autoComplete","onChange","window","performance","navigation","LinearProgress","thickness","TextField","label","name","target","multiline","rows","rowsMax","FormControl","formControl","InputLabel","htmlFor","Select","native","inputProps","Button","startIcon","getQuiz","JSON","parse","err","url","useParams","dashboardUrl","pathname","displayStyle","card","top","left","backgroundSize","backgroundImage","backgroundPosition","bullet","pos","papperLeft","cardProfile","cardAction","roots","DashboardDisplayVilla","dashStyle","classStyle","Card","CardContent","Typography","gutterBottom","useStyles","cardText","buttonText","fontWeight","paddingRight","Settings","handleSubmit","Slide","direction","in","open","mountOnEnter","unmountOnExit","placeholder","fullWidth","InputLabelProps","shrink","onClick","handleClick","handleChange","formUpdate","setOpen","openSnack","setOpenSnack","prev","handleClose","event","reason","CardActions","Snackbar","autoHideDuration","onClose","urls","role","pathUrlUser","pathUrlVilla","pathUrlAdmin","activeColor","List","ListItem","ListItemIcon","ListItemText","primary","Divider","useTheme","React","push","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","edge","noWrap","Drawer","register","fullname","email","password","config","body","stringify","errors","password2","setFormData","setTime","registerIn","Backdrop","CircularProgress","clearTimeout","Container","Avatar","required","autoFocus","FormControlLabel","control","Checkbox","getCurrentProfile","spinner","createProfile","edit","contact","bio","twitter","facebook","instagram","displaySocialInputs","toggleSocialInputs","labelId","MenuItem","Spinner","Input","startAdornment","InputAdornment","login","isChecked","dashboard","setChecked","loggedin","checked","Box","mt","Routes","exact","path","Dashboard","Register","Login","CreateProfile","useHistory","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","handleMobileMenuOpen","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","mobileMenuId","renderMobileMenu","Badge","badgeContent","aria-controls","aria-haspopup","ButtonGroup","authMenu","notauthMenu","InputBase","input","Footer","datatext","cardItem","verticalAlign","CardItems","descriptions","slice","CardActionArea","CardMedia","disableSpacing","HomeDisplay","layout","Header","getAllRooms","getVillas","App","Home","ReactDOM","document","getElementById"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,8C,0OCG9BC,EAAW,SAACC,EAAKC,GAAN,IAAiBC,EAAjB,uDAA2B,IAA3B,OAAoC,SAAAC,GAC1D,IAAMC,EAAKC,IAAKC,KAChBH,EAAS,CACPI,KCNqB,YDOrBC,QAAS,CAAER,MAAKC,YAAWG,QAG7BK,YAAW,kBAAMN,EAAS,CAAEI,KCTF,eDSsBC,QAASJ,MAAOF,KEAnDQ,EARM,SAAAC,GACfA,EACFC,IAAMC,SAASC,QAAQC,OAAO,gBAAkBJ,SAEzCC,IAAMC,SAASC,QAAQC,OAAO,iBCW5BC,EAAW,yDAAM,WAAMb,GAAN,eAAAc,EAAA,6DACxBC,aAAaP,OACfD,EAAaQ,aAAaP,OAFA,kBAMRC,IAAMO,IAAI,aANF,OAMpBC,EANoB,OAO1BjB,EAAS,CACPI,KFrBqB,cEsBrBC,QAASY,EAAIC,OATW,gDAa1BlB,EAAS,CACPI,KF1BoB,eEYI,yDAAN,uDAqFXe,EAAS,SAAC,GAAD,EAAEC,QAAF,OAAe,SAAApB,GAKnC,OAJAA,EAAS,CAAEI,KF1Ec,gBE2EzBJ,EAAS,CAAEI,KF7FgB,kBE8F3BJ,EAAS,CAAEI,KFjGS,WEkGpBJ,EAAS,CAAEI,KFvCc,gBEwClB,kBAAC,IAAD,CAAUiB,GAAI,a,0CCxGjBC,EAAe,G,gkBCSrB,IAAMA,EAAe,CACnBd,MAAOO,aAAaQ,QAAQ,SAC5BC,gBAAiB,KACjBC,SAAS,EACTC,SAAS,KACTC,KAAM,M,yjBCPR,IAAML,EAAe,CACnBM,QAAS,KACTC,SAAU,GACVC,MAAO,GACPL,SAAS,EACTM,MAAO,I,yjBCJT,IAAMC,EAAc,CAClBC,MAAO,GACPC,KAAM,KACNT,SAAS,EACTM,MAAO,I,yjBCLT,IAAMC,EAAc,CAChBG,MAAO,GACPC,KAAM,KACNC,MAAM,KACNZ,SAAS,EACTa,SAAS,EACTP,MAAO,I,yjBCLX,IAAMT,EAAe,CACjBiB,MAAO,KACPC,MAAO,KACPC,OAAQ,GACRhB,SAAS,EACTM,MAAO,I,yjBCPX,IAAMT,EAAe,CACjBmB,OAAQ,GACRF,MAAO,KACPJ,MAAO,GACPC,KAAM,KACNM,UAAW,GACXC,SAAU,KACVC,MAAM,GACNnB,SAAS,EACTM,MAAO,I,yjBCXX,IAAMT,EAAe,CACjBuB,MAAO,GACPC,KAAM,KACNrB,SAAS,EACTM,MAAO,ICDIgB,4BAAgB,CAC3BC,MRNW,WAAwC,IAA/BC,EAA8B,uDAAtB3B,EAAc4B,EAAQ,uCAC5C9C,EAAkB8C,EAAlB9C,KAAMC,EAAY6C,EAAZ7C,QACd,OAAQD,GACN,IHRqB,YGSnB,MAAM,GAAN,mBAAW6C,GAAX,CAAkB5C,IACpB,IHTwB,eGUtB,OAAO4C,EAAME,QAAO,SAAAH,GAAK,OAAIA,EAAM/C,KAAOI,KAC5C,QACE,OAAO4C,IQDTG,KPQW,WAAwC,IAA/BH,EAA8B,uDAAtB3B,EAAc4B,EAAQ,uCAC5C9C,EAAkB8C,EAAlB9C,KAAMC,EAAY6C,EAAZ7C,QAEd,OAAQD,GACN,IJpBuB,cIqBrB,OAAO,EAAP,GACK6C,EADL,CAEEzB,iBAAiB,EACjBC,SAAS,EACTC,SAASrB,EACTsB,KAAMtB,IAEV,IJ7ByB,gBI8BzB,IJ5BsB,aI6BtB,IJ3BsB,aI4BtB,IJ3BkB,SI4BlB,IJvB2B,kBIyBzB,OADAU,aAAasC,WAAW,SACjB,EAAP,GACKJ,EADL,CAEEzC,MAAO,KACPgB,iBAAiB,EACjBC,SAAS,EACTC,SAAS,KACTC,KAAK,OAET,IJxCyB,gBIyCzB,IJgDoB,WI/CpB,IJ9C4B,mBIgD1B,OADAZ,aAAauC,QAAQ,QAASjD,EAAQG,OAC/B,EAAP,GACKyC,EADL,GAEK5C,EAFL,CAGEmB,iBAAiB,EACjBC,SAAS,IAGb,QACE,OAAOwB,IO7CTrB,QNKW,WAAwC,IAA/BqB,EAA8B,uDAAtB3B,EAAc4B,EAAQ,uCAC5C9C,EAAkB8C,EAAlB9C,KAAMC,EAAY6C,EAAZ7C,QAEd,OAAQD,GACN,ILZuB,cKavB,ILbuB,cKcvB,ILZ0B,iBKaxB,OAAO,KACF6C,EADL,CAEErB,QAASvB,EACToB,SAAS,IAEb,ILhBwB,eKiBtB,OAAO,KACFwB,EADL,CAEEpB,SAAUxB,EACVoB,SAAS,IAGb,IL5ByB,gBK6BvB,OAAO,KACFwB,EADL,CAEElB,MAAO1B,EACPoB,SAAS,IAEb,ILhCyB,gBKiCvB,OAAO,KACFwB,EADL,CAEErB,QAAS,KACTE,MAAO,GACPL,SAAS,IAGb,ILpCqB,YKqCnB,OAAO,KACFwB,EADL,CAEEnB,MAAOzB,EACPoB,SAAS,IAGb,QACE,OAAOwB,IM7CTf,KLIW,WAAuC,IAA9Be,EAA6B,uDAArBjB,EAAakB,EAAQ,uCAC3C9C,EAAkB8C,EAAlB9C,KAAMC,EAAY6C,EAAZ7C,QAEd,OAAQD,GACN,INNqB,YMOnB,OAAO,KACF6C,EADL,CAEEhB,MAAO5B,EACPoB,SAAS,IAEb,INPoB,WMQlB,OAAO,KACFwB,EADL,CAEEf,KAAM7B,EACNoB,SAAS,IAEb,INjBsB,aMkBpB,OAAO,KACFwB,EADL,CAEElB,MAAO1B,EACPoB,SAAS,IAEb,INtBwB,eMuBtB,OAAO,KACFwB,EADL,CAEEhB,MAAOgB,EAAMhB,MAAMsB,KAAI,SAAArB,GAAI,OACzBA,EAAKsB,MAAQnD,EAAQJ,GAArB,KAA+BiC,EAA/B,CAAqCM,MAAOnC,EAAQmC,QAAUN,KAEhET,SAAS,IAEb,IN7BuB,cM8BrB,OAAO,KACFwB,EADL,CAEEhB,MAAOgB,EAAMhB,MAAMkB,QAAO,SAAAjB,GAAI,OAAIA,EAAKsB,MAAQnD,KAC/CoB,SAAS,IAEb,INlCoB,WMmClB,OAAO,KACFwB,EADL,CAEEhB,MAAM,CAAE5B,GAAH,mBAAe4C,EAAMhB,QAC1BR,SAAS,IAEb,INrCuB,cMsCrB,OAAO,KACFwB,EADL,CAEEf,KAAK,KAAMe,EAAMf,KAAb,CAAmBuB,SAAUpD,IACjCoB,SAAS,IAEb,IN5C0B,iBM6CxB,OAAO,KACFwB,EADL,CAEEf,KAAK,KACAe,EAAMf,KADP,CAEFuB,SAAUR,EAAMf,KAAKuB,SAASN,QAC5B,SAAAO,GAAO,OAAIA,EAAQF,MAAQnD,OAG/BoB,SAAS,IAEb,QACE,OAAOwB,IK/DTU,KDDW,WAAwC,IAA/BV,EAA8B,uDAAtB3B,EAAc4B,EAAQ,uCAC1C9C,EAAkB8C,EAAlB9C,KAAMC,EAAY6C,EAAZ7C,QAEd,OAAQD,GACJ,IV6DgB,WU5DZ,OAAO,KACA6C,EADP,CAEIH,KAAMzC,EACNoB,SAAQ,IAEhB,IVsDiB,YUrDb,OAAO,KACAwB,EADP,CAEIJ,MAAOxC,EACPoB,SAAS,IAEjB,IVmDkB,aUlDd,OAAO,KACAwB,EADP,CAEIW,MAAOvD,EACPoB,SAAS,IAEjB,IV+CqB,gBU9CjB,YACOwB,EADP,CAEIH,KAAMzC,EACNoB,SAAS,IAEjB,QACI,OAAOwB,IC3BfV,MHGW,WAAwC,IAA/BU,EAA8B,uDAAtB3B,EAAc4B,EAAQ,uCAC1C9C,EAAkB8C,EAAlB9C,KAAMC,EAAY6C,EAAZ7C,QAEd,OAAQD,GACJ,IRGiB,YQFjB,IRIoB,eQHhB,OAAO,KACA6C,EADP,CAEIV,MAAOlC,EACPoB,SAAS,IAEjB,IREiB,YQDb,YACOwB,EADP,CAEIT,MAAMnC,EACNoB,SAAQ,IAEhB,IRNkB,aQOd,OAAO,KACAwB,EADP,CAEIR,OAAQpC,EACRoB,SAAS,IAGjB,IRhBmB,cQiBf,OAAO,KACAwB,EADP,CAEIlB,MAAO1B,EACPoB,SAAS,IAEjB,IRpBmB,cQqBf,OAAO,KACAwB,EADP,CAEIV,MAAO,KACPd,SAAS,IAGjB,IRzBuB,kBQ0BnB,OAAO,KACAwB,EADP,CAEIY,MAAOxD,EACPoB,SAAS,IAEjB,QACI,OAAOwB,IG9Cfb,KJEW,WAAuC,IAA9Ba,EAA6B,uDAArBjB,EAAakB,EAAQ,uCACzC9C,EAAkB8C,EAAlB9C,KAAMC,EAAY6C,EAAZ7C,QACd,OAAQD,GACJ,IPckB,aObd,OAAO,KACA6C,EADP,CAEId,MAAO9B,EACPoB,SAAS,IAEjB,IPaiB,YOZb,OAAO,KACAwB,EADP,CAEIb,KAAM/B,EACNoB,SAAS,IAEjB,IPGmB,cOFnB,IPUoB,eOThB,OAAO,KACAwB,EADP,CAEIlB,MAAO1B,EACPoB,SAAS,IAEjB,IPHuB,kBOInB,OAAO,KACAwB,EADP,CAEIhB,MAAOgB,EAAMhB,MAAMsB,KAAI,SAAArB,GAAI,OACvBA,EAAKsB,MAAQnD,EAAQJ,GAArB,KAA+BiC,EAA/B,CAAqCM,MAAOnC,EAAQmC,QAAUN,KAElET,SAAS,IAEjB,IPVoB,eOWhB,OAAO,KACAwB,EADP,CAEId,MAAOc,EAAMd,MAAMgB,QAAO,SAAAf,GAAI,OAAIA,EAAKoB,MAAQnD,KAC/CoB,SAAS,IAEjB,IPfiB,YOgBb,OAAO,KACAwB,EADP,CAEIb,KAAM/B,EACNoB,SAAS,IAEjB,IPjBoB,eOkBhB,YACOwB,EADP,CAEIb,KAAMa,EAAMb,KAAKmB,KAAI,SAAAO,GAAG,OACpBA,EAAI,MAERrC,SAAS,IAEjB,IPbkB,aOcd,OAAO,KACAwB,EADP,CAEIb,KAAM,KACNX,SAAS,IAEjB,QACI,OAAOwB,II1Dfc,MFGW,WAAwC,IAA/Bd,EAA8B,uDAAtB3B,EAAc4B,EAAQ,uCAC1C9C,EAAkB8C,EAAlB9C,KAAMC,EAAY6C,EAAZ7C,QAEd,OAAQD,GACJ,ITgCyB,oBS/BrB,OAAO,KACA6C,EADP,CAEIR,OAAQpC,EACRoB,SAAS,IAEjB,ITuBqB,gBStBjB,YACOwB,EADP,CAEIL,MAAOvC,EACPoB,SAAS,IAEjB,ITqB4B,uBSpBxB,OAAO,KACAwB,EADP,CAEIP,UAAWrC,EACXoB,SAAS,IAEjB,ITYqB,gBSXjB,OAAO,KACAwB,EADP,CAEId,MAAO9B,EACPoB,SAAS,IAEjB,ITkBmB,cSjBf,OAAO,KACAwB,EADP,CAEIR,OAAO,KACPF,MAAO,KACPH,KAAM,KACNO,SAAU,KACVC,MAAM,KACNF,UAAU,KACVP,MAAM,KACNV,SAAS,IAEjB,QACI,OAAOwB,MGvDbe,EAAa,CAACC,KAQLC,EANDC,sBACZC,EALmB,GAOnBC,8BAAoBC,kBAAe,WAAf,EAAmBN,K,gBCoB1BO,eAJS,SAAAtB,GAAK,MAAK,CAC9BG,KAAMH,EAAMG,QAGDmB,EA1BM,SAAC,GAAD,IACgBC,EADhB,EACKC,UADL,IAEKrB,KAAQ5B,EAFb,EAEaA,gBAAiBC,EAF9B,EAE8BA,QAAQE,EAFtC,EAEsCA,KAE9B+C,GAJR,EAGKC,MAHL,oDAMjB,kBAAC,IAAD,iBACQD,EADR,CAEIE,OAAQ,SAAAC,GAAK,OACRrD,GAAoBC,EAGjBE,EAAO,kBAAC6C,EAAcK,GAAW,kDAFjC,kBAAC,IAAD,CAAUxD,GAAG,a,+RCwIdyD,GAjJEC,cAAW,SAACC,GAAD,MAAY,CACpCC,UAAU,CACNC,MAAM,QAEVC,SAAU,CACNC,OAAQJ,EAAMI,OAAOC,OAAS,EAC9BH,MAAO,QAEXI,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAaT,EAAMU,QAAQ,IAE/BC,MAAM,aACFC,QAAS,QACRZ,EAAMa,YAAYC,GAAG,MAAQ,CAC1BF,QAAS,UAGjBG,MAAO,CACHC,WAAW,cACXC,QAAQ,OACRC,UAAWlB,EAAMU,QAAQ,GACzBE,QAAS,OACTO,cAAe,UAEnBC,OAAO,aACHC,SAAU,WACVC,aAActB,EAAMuB,MAAMD,aAC1BE,gBAAiBC,aAAKzB,EAAM0B,QAAQ9F,OAAO+F,MAAO,IAClDC,SAAS,MACTC,WAAY,OACZ,UAAW,CACPL,gBAAiBC,aAAKzB,EAAM0B,QAAQ9F,OAAO+F,MAAO,IAClDE,WAAY,QAEhBpB,YAAaT,EAAMU,QAAQ,GAC3BoB,WAAY,EACZC,MAAO,QACN/B,EAAMa,YAAYC,GAAG,MAAQ,CAC1BgB,WAAY9B,EAAMU,QAAQ,GAC1BqB,MAAO,SAGfC,WAAY,CACRf,QAASjB,EAAMU,QAAQ,EAAG,GAC1BuB,OAAQ,OACRZ,SAAU,WACVa,cAAe,OACftB,QAAS,OACTuB,WAAY,SACZC,eAAgB,UAEpBC,UAAW,CACPnC,MAAO,UACP4B,WAAW,OACXC,MAAO,OAEXO,WAAW,aACPrB,QAASjB,EAAMU,QAAQ,EAAG,EAAG,EAAG,GAEhC6B,YAAY,cAAD,OAAgBvC,EAAMU,QAAQ,GAA9B,OACXmB,WAAY7B,EAAMwC,YAAYC,OAAO,SACrCb,SAAU,MACVG,MAAO,QACN/B,EAAMa,YAAYC,GAAG,MAAQ,CAC1Bc,SAAU,MACVG,MAAO,SAGfW,eAAe,aACX9B,QAAS,QACRZ,EAAMa,YAAYC,GAAG,MAAQ,CAC1BF,QAAS,SAGjB+B,cAAc,aACV/B,QAAS,QACRZ,EAAMa,YAAYC,GAAG,MAAQ,CAC1BF,QAAS,SAIjBgC,KAAM,CACFC,SAAU,KAEd,2BAA4B,CACxB1B,cAAe,eAEnB2B,MAAO,CACHb,OAAQ,EACRc,WAAY,UAEhBC,OAAQ,CACJC,UAAW,eACXnB,WAAY,OACZD,WAAY7B,EAAMwC,YAAYC,OAAO,YAAa,CAC9CS,SAAUlD,EAAMwC,YAAYU,SAASC,YAG7CC,WAAY,CACRH,UAAW,kBAEfI,OAAQ,CACJ7B,gBAAiB8B,KAAI,MAEzBC,OAAQ,CACJrD,MAAOF,EAAM0B,QAAQ8B,gBAAgBC,KAAW,MAChDjC,gBAAiBiC,KAAW,MAEhCC,OAAQ,CACJxD,MAAOF,EAAM0B,QAAQ8B,gBAAgBG,KAAW,MAChDnC,gBAAiBmC,KAAW,MAEhCC,KAAM,CACF7B,MAAO,OACPb,UAAWlB,EAAMU,QAAQ,IAE7BmD,OAAQ,CACJC,OAAQ9D,EAAMU,QAAQ,EAAG,EAAG,IAEhCqD,iBAAiB,CACb/C,WAAYhB,EAAM0B,QAAQsC,UAAUC,MACpC/C,UAAWlB,EAAMU,QAAQ,GACzBY,aAAa,IACb4C,UAAU,SAEdC,YAAY,CACRnD,WAAWhB,EAAM0B,QAAQsC,UAAUI,aACnCnD,QAAQ,OACR6C,OAAO,MACP7B,OAAO,QACPF,MAAM,MACNb,UAAWlB,EAAMU,QAAQ,GACzBE,QAAS,OACTO,cAAe,UAGnBkD,OAAQ,CACJ7C,gBAAiB8C,KAAK,KACtBrD,QAASjB,EAAMU,QAAQ,Q,ukBCjJ/B,IA4Ee6D,GA1EIxE,cAAW,SAACC,GAAD,MAAY,CACtCwE,QAAQ,CACJtE,MAAM,UACNuE,eAAe,OACfC,UAAU,OACV,UAAW,CAEPxE,MAAM,YACNuE,eAAe,OACfC,UAAU,SAGlB9B,KAAM,CACFhC,QAAS,QAEb+D,OAAQ,CACJvE,OAAQJ,EAAMI,OAAOC,OAAS,EAC9BwB,WAAY7B,EAAMwC,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDmC,OAAQ5E,EAAMwC,YAAYoC,OAAOC,MACjC3B,SAAUlD,EAAMwC,YAAYU,SAAS4B,iBAG7CC,YAAa,CACTjD,WAzBY,IA0BZC,MAAM,eAAD,OA1BO,IA0BP,OACLF,WAAY7B,EAAMwC,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDmC,OAAQ5E,EAAMwC,YAAYoC,OAAOC,MACjC3B,SAAUlD,EAAMwC,YAAYU,SAAS8B,kBAG7CxE,WAAY,CACRC,YAAa,IAEjBwE,KAAM,CACFrE,QAAS,QAEbP,OAAQ,CACJ0B,MAvCY,IAwCZmD,WAAY,EACZC,WAAY,UAEhBC,WAAY,CACRrD,MA5CY,IA6CZF,WAAY7B,EAAMwC,YAAYC,OAAO,QAAS,CAC1CmC,OAAQ5E,EAAMwC,YAAYoC,OAAOC,MACjC3B,SAAUlD,EAAMwC,YAAYU,SAAS8B,kBAG7CK,YAAY,aACRxD,WAAY7B,EAAMwC,YAAYC,OAAO,QAAS,CAC1CmC,OAAQ5E,EAAMwC,YAAYoC,OAAOC,MACjC3B,SAAUlD,EAAMwC,YAAYU,SAAS4B,gBAEzCQ,UAAW,SACXvD,MAAO/B,EAAMU,QAAQ,GAAK,GACzBV,EAAMa,YAAYC,GAAG,MAAQ,CAC1BiB,MAAO/B,EAAMU,QAAQ,GAAK,IAGlC6E,QAAQ,IACJ3E,QAAS,OACTuB,WAAY,SACZC,eAAgB,WAChBnB,QAASjB,EAAMU,QAAQ,KAEpBV,EAAMwF,OAAOD,SAEpBE,QAAS,CACLlF,SAAU,EACVwC,WAAY/C,EAAMU,QAAQ,GAC1BgF,cAAe1F,EAAMU,QAAQ,QCVtBiF,GA3De,WAC1B,IAAMC,EAAUrB,KACVsB,EAAW/F,KAEjB,OACI,kBAAC,WAAD,KACI,kBAACgG,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAWJ,EAAQhD,KAAMlC,QAAS,GAC9C,kBAACoF,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,IACX,kBAACH,GAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAACC,GAAA,EAAD,CAAOJ,UAAWH,EAAS9E,MAAOsF,UAAW,GACzC,4CAGR,kBAACP,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAACC,GAAA,EAAD,CAAOJ,UAAWH,EAAS9E,MAAOsF,UAAW,GACzC,wCAGR,kBAACP,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAACC,GAAA,EAAD,CAAOJ,UAAWH,EAAS9E,MAAOsF,UAAW,GACzC,0CAKhB,kBAACP,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,IACX,kBAACG,GAAA,EAAD,CAAOC,UAAW,GACd,kBAACP,GAAA,EAAD,CAAMhI,MAAI,GACN,kBAACsI,GAAA,EAAD,CAAOJ,UAAWH,EAAS9E,MAAOsF,UAAW,GACzC,0CAKhB,kBAACP,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,IACX,kBAACH,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAACC,GAAA,EAAD,CAAOC,UAAW,GACd,kBAACP,GAAA,EAAD,CAAMhI,MAAI,GACN,kBAACsI,GAAA,EAAD,CAAOJ,UAAWH,EAAS9E,MAAOsF,UAAW,GACzC,0CAKhB,kBAACP,GAAA,EAAD,CAAMhI,MAAI,EAAEmI,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC3B,kBAACC,GAAA,EAAD,CAAOC,UAAW,GACd,kBAACP,GAAA,EAAD,CAAMhI,MAAI,GACN,kBAACsI,GAAA,EAAD,CAAOJ,UAAWH,EAAS9E,MAAOsF,UAAW,GACzC,8C,+BC/BrB9G,gBAJS,SAAAtB,GAAK,MAAK,CAC9BqI,OAAQrI,EAAMD,SAGHuB,EAlBA,SAAC,GAAD,IAAG+G,EAAH,EAAGA,OAAH,OACA,OAAXA,GACAA,EAAOC,OAAS,GAChBD,EAAO/H,KAAI,SAAAP,GAAK,OACZ,yBAAKwI,IAAKxI,EAAM/C,GAAIwL,MAAO,CAACC,aAAa,SACrC,+BAAO,kBAACC,GAAA,EAAD,CAAQC,QAAQ,SAASC,SAAU7I,EAAMlD,WAAYkD,EAAMnD,aCgHjEiM,GAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,IAAZ,8CAAqB,WAAMhM,GAAN,eAAAc,EAAA,+EAElBL,IAAMwL,IAAN,wBAA2BD,GAAOD,EAAU,CAC1DpL,QAAQ,CACJ,eAAgB,sBAJY,OAE9BM,EAF8B,OAQpCjB,EAAS,CACLI,KlB5Fa,YkB6FbC,QAASY,EAAIC,OAOjBlB,EAASJ,EAAS,aAAc,YAjBI,gDAmBpCI,EAAS,CACLI,KlB1Ge,ckB2GfC,QAAS,CAAER,IAAK,KAAIqM,SAASC,WAAYC,OAAQ,KAAIF,SAASE,UArB9B,yDAArB,uDC1ERC,GA1CItH,cAAW,SAACC,GAAD,MAAY,CACtCsH,KAAK,CACDvF,MAAM,IACNmC,UAAU,QACVqD,OAAO,sBACP3G,QAAQ,OACR4G,OAAO,UACPrF,WAAW,SACXb,aAAa,OACbc,eAAe,UAEnBqF,gBAAiB,CACb7G,QAAS,OACTO,cAAe,MACfuG,SAAU,QAEdC,MAAM,CACF/G,QAAS,cACTU,aAAc,GACdiG,OAAQ,oBACRb,aAAc,EACdjG,YAAa,EACbsB,MAAO,IACPE,OAAQ,IACRhB,QAAS,EACT2G,UAAW,cAGfC,WAAW,CACPjH,QAAS,OACTgB,SAAU,EACVkG,SAAU,UAEdhJ,IAAI,CACAwC,aAAc,GACdyG,UAAU,OACVhG,MAAO,IACPE,OAAQ,SCgBD1C,gBALS,SAAAtB,GAAK,MAAK,CAC9BG,KAAMH,EAAMG,KACZhB,KAAMa,EAAMb,KACZkJ,OAAOrI,EAAMD,SAEsB,CAAC8I,WAAQlM,YAAjC2E,EAnDG,SAACM,GACf,IAAM+F,EAAUyB,KAIVW,EAASnI,EAAMoI,SAAS1J,KAAI,SAAC2J,EAAKC,GAAN,OAC9B,yBAAKnC,UAAWJ,EAAQ+B,MAAOnB,IAAK2B,GAChC,yBAAKnC,UAAWJ,EAAQiC,YACpB,yBACIO,IAAKF,EAAKG,KACVC,IAAKJ,EAAKK,QACVvC,UAAWJ,EAAQ9G,WAMnC,OACI,kBAACgH,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIE,GAAI,GAAID,GAAI,IAC3B,kBAACJ,GAAA,EAAD,CAAMC,WAAS,GACVlG,EAAMoI,SAAS1B,OAAS,EACrB,kBAACT,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIE,GAAI,EAAGD,GAAI,GAC1B,2BAAOF,UAAWJ,EAAQ6B,iBACrBO,IAGZ,KACAnI,EAAMoI,SAAS1B,OAAS,EAAI,KACzB,kBAACT,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIE,GAAI,EAAGD,GAAI,GAC1B,kBAAC,GAAD,MACA,yCAASrG,EAAM2I,QAAf,CAAwBxC,UAAWJ,EAAQ0B,OACvC,0BAAWzH,EAAM4I,UACjB,kBAAC,KAAD,MAFJ,sB,2FCpBlB3I,GAAWC,cAAW,SAACC,GAAD,MAAY,CACpCyF,QAAS,CACLlF,SAAU,EACVwC,WAAY/C,EAAMU,QAAQ,GAC1BgF,cAAe1F,EAAMU,QAAQ,IAEjCM,WAAW,CACPA,WAAYhB,EAAM0B,QAAQsC,UAAUC,MACpC/C,UAAWlB,EAAMU,QAAQ,GACzBY,aAAa,IACb4C,UAAU,SAEdwE,UAAU,CACNxI,MAAO,OACPyI,SAAU,GACVC,UAAU,SACVxG,eAAe,UAEnByG,UAAU,CACN9G,MAAM,OACNb,UAAU,IAEd4H,YAAa,CACT5H,UAAWlB,EAAMU,QAAQ,IAE7BqI,OAAQ,CACJjF,OAAQ9D,EAAMU,QAAQ,QAGxBsI,GAAW,CACb,CAACxC,IAAI,IAAKyC,MAAM,KAChB,CAACzC,IAAI,IAAKyC,MAAM,KAChB,CAACzC,IAAI,IAAKyC,MAAM,KAChB,CAACzC,IAAI,IAAKyC,MAAM,KAChB,CAACzC,IAAI,IAAKyC,MAAM,KAChB,CAACzC,IAAI,IAAKyC,MAAM,KAChB,CAACzC,IAAI,IAAKyC,MAAM,MAEdC,GAAW,CACb,CAAC1C,IAAI,IAAKyC,MAAM,aAChB,CAACzC,IAAI,UAAWyC,MAAM,WACtB,CAACzC,IAAI,SAAUyC,MAAM,UACrB,CAACzC,IAAI,eAAgByC,MAAM,gBAC3B,CAACzC,IAAI,eAAgByC,MAAM,gBAC3B,CAACzC,IAAI,QAASyC,MAAM,UAElBE,GAAS,CACX,CAAC3C,IAAI,QAASyC,MAAM,SACpB,CAACzC,IAAI,KAAMyC,MAAM,OAEfG,GAAU,CACZ,CAAC5C,IAAI,SAAUyC,MAAM,UACrB,CAACzC,IAAI,SAAUyC,MAAM,WAkQV1J,gBANS,SAAAtB,GAAK,MAAK,CAC9BG,KAAMH,EAAMG,KACZhB,KAAMa,EAAMb,KACZR,QAASqB,EAAMrB,QACf0J,OAAOrI,EAAMD,SAEsB,CAACpD,WAASkM,YAAlCvH,EA/PG,SAAC,GAA+C,EAA9C3E,SAA+C,IAAtCkM,EAAqC,EAArCA,QAAQ1K,EAA6B,EAA7BA,QAAiBQ,EAAY,EAArBA,QAASA,QAAY,EACpCyM,mBAAS,IAD2B,mBACvDC,EADuD,KAChDC,EADgD,OAE3BF,mBAAS,IAFkB,mBAEvDG,EAFuD,KAE5CC,EAF4C,OAKfJ,mBAAS,GALM,mBAKvDK,EALuD,KAKrCC,EALqC,OAMxBC,aAAY,CAC9CC,OAHqB,gDAIrBC,QALgB,IAMhBC,OAAO,WAAD,4BAAE,WAAMC,GAAN,SAAAlO,EAAA,sDACJkO,EAAcC,SAAQ,SAAC/B,GACnB,IAAMgC,EAAS,IAAIC,WACnBD,EAAOE,QAAU,kBAAMC,QAAQC,IAAI,6BACnCJ,EAAOK,OAAP,uCAAgB,WAAMC,GAAN,uBAAA1O,EAAA,6DACZ0O,EAAEC,iBACgBP,EAAOQ,QACnB3D,EAAW,IAAI4D,UACZC,OAAO,QAAQ1C,GAJZ,kBAMWzM,IAAMyB,KAAK,uBAAwB6J,EAAU,CAACpL,QAAQ,CAAC,eAAe,uBACrFkP,iBAAkB,SAAAC,GACdnB,EACIoB,SACIC,KAAKC,MAA8B,IAAvBH,EAAcI,OAAgBJ,EAAcK,SAIhE7P,YAAW,kBAAIqO,EAAoB,KAAG,QAdtC,OAMFyB,EANE,SAgBaA,EAAKlP,KAAnBsC,EAhBC,EAgBDA,IAAI6M,EAhBH,EAgBGA,OACXhB,QAAQC,IAAIe,GACZ5B,EAAc,CAAC4B,SAAO7M,QAlBd,kDAqBmB,MAAxB,KAAI0I,SAASE,OACZiD,QAAQC,IAAI,mCAEZD,QAAQC,IAAI,KAAIpD,SAAShL,KAAKrB,KAxB1B,0DAAhB,sDA4BAqP,EAAOoB,kBAAkBpD,MAE7BqB,EAASS,EAAczL,KAAI,SAAA2J,GAAI,OAAIqD,OAAOC,OAAOtD,EAAM,CACnDK,QAASkD,IAAIC,gBAAgBxD,SAnC7B,2CAAF,mDAAC,KAHJyD,EANuD,EAMvDA,aAAcC,EANyC,EAMzCA,cANyC,EAgDrBvC,mBAAS,IAhDY,mBAgDvDwC,EAhDuD,KAgDxCC,EAhDwC,OAiDfzC,mBAAS,IAjDM,mBAiDvD0C,EAjDuD,KAiDrCC,EAjDqC,OAkDjC3C,mBAAS,IAlDwB,mBAkDvD4C,EAlDuD,KAkD9CC,EAlD8C,OAmDjC7C,mBAAS,IAnDwB,mBAmDvD8C,EAnDuD,KAmD9CC,EAnD8C,OAoDvB/C,mBAAS,IApDc,mBAoDvDgD,EApDuD,KAoDzCC,EApDyC,OAqD7BjD,mBAAS,IArDoB,mBAqDvDkD,EArDuD,KAqD5CC,EArD4C,OAsD3BnD,mBAAS,IAtDkB,mBAsDvDoD,EAtDuD,aAuD3BpD,mBAAS,KAvDkB,mBAuDvDqD,GAvDuD,KAuD3CC,GAvD2C,QAwD3BtD,mBAAS,IAxDkB,qBAwDvDuD,GAxDuD,MAwD3CC,GAxD2C,SAyDnBxD,mBAAS,IAzDU,qBAyDvDyD,GAzDuD,MAyDvCC,GAzDuC,MAoExDC,GAAQ,uCAAE,WAAOxC,GAAP,eAAA1O,EAAA,sDACZ0O,EAAEC,iBACIzD,EAAMwC,EAAWhL,IAcvBsI,EAAQ,CAACC,SAbO,CACZkG,SAAUpB,EACVqB,YAAanB,EACboB,MAAOT,GACPU,MAAOR,GACPS,UAAWP,GACXQ,GAAIrB,EACJsB,GAAIpB,EACJqB,QAASnB,EACToB,KAAMlB,EACNmB,MAAOjB,GAGQzF,MAAK5K,YAhBZ,2CAAF,sDAkBduR,qBAAU,kBAAM,WAEZrE,EAAMW,SAAQ,SAAA/B,GAAI,OAAIuD,IAAImC,gBAAgB1F,EAAKK,eAChD,CAACe,IACJe,QAAQC,IAAId,EAAW6B,QACvB,IAYMzF,GAAU9F,KAChB,OACI,kBAACgG,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAAC,GAAD,MACA,0BAAMH,UAAWJ,GAAQhD,KAAMiL,YAAU,EAACC,aAAa,MAAMd,SAAU,SAACxC,GAAD,OAAKwC,GAASxC,IAAIuD,SAhB5E,SAACvD,GAClBA,EAAEC,iBACc,OAAZ7N,GACI4M,EAAW6B,OAAO9E,OAAS,GACvByH,OAAOC,aACkB,SAArBrR,EAAQqQ,UAAuD,IAAhCgB,YAAYC,WAAW9S,MACtD4C,MAAM,6BAWd,kBAAC,GAAD,CACIwK,QAASmD,IACTlD,SAAUmD,IACV3D,SAAUqB,IAEV,kBAAC6E,GAAA,EAAD,CACIvH,QAAQ,cACRH,MAAO,CACHxE,OAAQ,GACRf,UAAW,GACXI,aAAc,GAElB2H,MAAOS,EACPrB,KAAM,GACN+F,UAAW,IAED,IAAjB9E,EAAM/C,OAAc,KACrB,kBAACT,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIE,GAAI,GAAID,GAAI,IAC3B,kBAACmI,GAAA,EAAD,CACIrI,UAAWJ,GAAQiD,UACnB5N,GAAG,iBACHqT,MAAM,YACN1H,QAAQ,WACR2H,KAAK,WACLtF,MAAO4C,EACPkC,SAtEK,SAAAvD,GAAKsB,EAAiBtB,EAAEgE,OAAOvF,UAwExC,kBAACoF,GAAA,EAAD,CACIrI,UAAWJ,GAAQiD,UACnB5N,GAAG,iBACHqT,MAAM,cACN1H,QAAQ,WACR6H,WAAS,EACTC,KAAM,EACNC,QAAS,EACTJ,KAAK,cACLtF,MAAO8C,EACPgC,SAhFQ,SAAAvD,GAAKwB,EAAoBxB,EAAEgE,OAAOvF,UAkF9C,2BAAOjD,UAAU,aAAjB,aAAuC,0BAAMS,MAAO,CAACvG,MAAM,QAApB,MACvC,4BAAQ6N,SAlFF,SAAAvD,GAAKqC,GAAcrC,EAAEgE,OAAOvF,QAkFDsF,KAAK,QAAQvI,UAAU,eAAeiD,MAAO2D,IACzE5D,GAAUzK,KAAI,SAAAT,GAAI,OACf,4BAAQ0I,IAAK1I,EAAK0I,IAAKyC,MAAOnL,EAAK0I,KAAM1I,EAAKmL,WAGtD,2BAAOjD,UAAU,aAAjB,YAAsC,0BAAMS,MAAO,CAACvG,MAAM,QAApB,MACtC,4BAAQ8F,UAAU,eAAeuI,KAAK,YAAYR,SAvFxC,SAAAvD,GAAKuC,GAAkBvC,EAAEgE,OAAOvF,QAuFqCA,MAAO6D,IACjF5D,GAAS3K,KAAI,SAAAT,GAAI,OACd,4BAAQ0I,IAAK1I,EAAK0I,IAAKyC,MAAOnL,EAAK0I,KAAM1I,EAAKmL,WAGtD,kBAACoF,GAAA,EAAD,CACIrI,UAAWJ,GAAQiD,UACnB5N,GAAG,iBACHqT,MAAM,QACNlT,KAAK,SACLwL,QAAQ,WACR2H,KAAK,QACLtF,MAAOyD,GAEPqB,SAxGE,SAAAvD,GAAKmC,GAAcnC,EAAEgE,OAAOvF,UA0GlC,kBAAC,WAAD,KACI,kBAAC2F,GAAA,EAAD,CAAa5I,UAAWJ,GAAQiD,WAC5B,kBAAC+F,GAAA,EAAD,CAAahI,QAAQ,WAAWZ,UAAWJ,GAAQiJ,aAC/C,kBAACC,GAAA,EAAD,CAAYC,QAAQ,8BAApB,MACA,kBAACC,GAAA,EAAD,CACIC,QAAM,EACNV,KAAK,KACLR,SAvHb,SAAAvD,GAAK0B,EAAW1B,EAAEgE,OAAOvF,QAwHZA,MAAOgD,EACPqC,MAAM,KACNY,WAAY,CACRX,KAAM,KACNtT,GAAI,+BAGPkO,GAAO5K,KAAI,SAAAT,GAAI,OACZ,4BAAQ0I,IAAK1I,EAAK0I,IAAKyC,MAAOnL,EAAK0I,KAAM1I,EAAKmL,aAM9D,kBAAC2F,GAAA,EAAD,CAAa5I,UAAWJ,GAAQiD,WAC5B,2BAAO7C,UAAU,aAAjB,KAA+B,0BAAMS,MAAO,CAACvG,MAAM,QAApB,MAC/B,4BAAQ8F,UAAU,eAAeuI,KAAK,KAAKR,SAvIhD,SAAAvD,GAAK4B,EAAW5B,EAAEgE,OAAOvF,QAuI6CA,MAAOkD,GACnEhD,GAAO5K,KAAI,SAAAT,GAAI,OACZ,4BAAQ0I,IAAK1I,EAAK0I,IAAKyC,MAAOnL,EAAK0I,KAAM1I,EAAKmL,YAI1D,kBAAC2F,GAAA,EAAD,CAAa5I,UAAWJ,GAAQiD,WAC5B,2BAAO7C,UAAU,aAAjB,OAAiC,0BAAMS,MAAO,CAACvG,MAAM,QAApB,MACjC,4BAAQ8F,UAAU,eAAeuI,KAAK,OAAOR,SA7IhD,SAAAvD,GAAKgC,EAAahC,EAAEgE,OAAOvF,QA6I6CA,MAAOsD,GACvEpD,GAAO5K,KAAI,SAAAT,GAAI,OACZ,4BAAQ0I,IAAK1I,EAAK0I,IAAKyC,MAAOnL,EAAK0I,KAAM1I,EAAKmL,YAI1D,kBAAC2F,GAAA,EAAD,CAAa5I,UAAWJ,GAAQiD,WAC5B,2BAAO7C,UAAU,aAAjB,WAAqC,0BAAMS,MAAO,CAACvG,MAAM,QAApB,MACrC,4BAAQ8F,UAAU,eAAeuI,KAAK,UAAUR,SAtJhD,SAAAvD,GAAK8B,EAAgB9B,EAAEgE,OAAOvF,QAsJ6CA,MAAOoD,GAC7EjD,GAAQ7K,KAAI,SAAAT,GAAI,OACb,4BAAQ0I,IAAK1I,EAAK0I,IAAKyC,MAAOnL,EAAK0I,KAAM1I,EAAKmL,aAK9D,kBAACkG,GAAA,EAAD,CACIvI,QAAQ,YACR1G,MAAM,YACN9E,KAAK,SACLiN,KAAK,QACLrC,UAAWJ,GAAQmD,OACnBqG,UAAW,kBAAC,KAAD,OANf,QAUA,kBAACD,GAAA,EAAD,CACIvI,QAAQ,YACR1G,MAAM,UACNmI,KAAK,QACLrC,UAAWJ,GAAQmD,QAJvB,qBCxPLxJ,gBALS,SAAAtB,GAAK,MAAK,CAC9BG,KAAMH,EAAMG,KACZkI,OAAOrI,EAAMD,SAGsB,CAACqR,QCnDjB,yDAAM,WAAMrU,GAAN,eAAAc,EAAA,sDACzB,IACUsP,EAAOkE,KAAKC,MAAMxT,aAAaQ,QAAQ,UAE7CvB,EAAS,CACLI,KvBmFoB,mBuBlFpBC,QAAS+P,EAAKlP,OAErB,MAAMsT,GACAA,GACCnF,QAAQC,IAAI,SAEhBtP,EAAS,CACLI,KvB+EsB,0BuB5FL,2CAAN,uDDmDyBR,YAAjC2E,EA1CG,SAAC,GAAqB,EAApB8P,QAAoB,EAAZzU,SAAa,IAC/BgL,EAAU9F,KAEX2P,EAAOC,cAAPD,IACCE,EAC2B,eAA7B3B,OAAOtR,SAASkT,SACZ,kBAAC,GAAD,MACC,KAIL,6BACI,kBAAC9J,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAWJ,EAAQhD,KAAMlC,QAAS,KAQ1D,OACI,kBAAC,WAAD,KACKiP,EACQ,eAARF,EACG,kBAAC3J,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIE,GAAI,EAAGD,GAAI,GAC1B,kBAAC,GAAD,OAEH,S,oBE9BX2J,GAAe9P,MAAW,SAACC,GAAD,MAAU,CACtC4C,KAAM,CACFhB,SAAU,KAEdkO,KAAK,CAEDjN,SAAU,OACVkN,IAAK,MACLC,KAAM,MACN1O,aAAa,GACb2B,UAAW,yBACXgN,eAAgB,OAChB1I,OAAO,EAEP1F,WAAY,OACZ3B,MAAM,QACNgQ,gBAAiB,oDACjB,UAAU,CACNC,mBAAmB,UAG3BC,OAAQ,CACJxP,QAAS,eACTkD,OAAQ,QACRb,UAAW,cAEftC,MAAO,CACHgI,SAAU,GACVzI,MAAO,WAEXmQ,IAAK,CACD3J,aAAc,IAElB3F,MAAM,CACFC,WAAW,QACXC,QAAQ,OACRK,aAAa,OACbJ,UAAWlB,EAAMU,QAAQ,GACzBE,QAAS,OACTO,cAAe,SACfgB,WAAY,UAEhBmO,WAAW,CACPpM,UAAU,KAEdqM,YAAY,CACR1N,SAAS,OACTqB,UAAU,KAGdpB,MAAO,CACHb,OAAQ,KAEZuO,WAAW,CACP9J,aAAa,IAEjB+J,MAAM,CACF1O,MAAM,YAuDC2O,GAjDc,WACzB,IAAM9K,EAAU+K,KACVC,EAAaf,KACnB,OACI,kBAAC/J,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAWJ,EAAQhD,KAAMlC,QAAS,GAC9C,kBAACoF,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,IACX,kBAACH,GAAA,EAAD,CAAMC,WAAS,EAACrF,QAAS,GACrB,kBAACoF,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACzB,kBAAC0K,GAAA,EAAD,CAAM7K,UAAW4K,EAAWd,KAAMlJ,QAAQ,YACtC,kBAACkK,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAY/K,UAAW4K,EAAWjQ,MAAOT,MAAM,gBAAgB8Q,cAAY,GAA3E,cAGA,kBAACD,GAAA,EAAD,CAAYnK,QAAQ,KAAKnH,UAAU,MAAnC,SAMZ,kBAACqG,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACzB,kBAAC0K,GAAA,EAAD,CAAM7K,UAAW4K,EAAWd,KAAMlJ,QAAQ,YACtC,kBAACkK,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAY/K,UAAW4K,EAAWjQ,MAAOT,MAAM,gBAAgB8Q,cAAY,GAA3E,uBAGA,kBAACD,GAAA,EAAD,CAAYnK,QAAQ,KAAKnH,UAAU,MAAnC,oBAMZ,kBAACqG,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAAC0K,GAAA,EAAD,CAAM7K,UAAW4K,EAAWd,KAAMlJ,QAAQ,YACtC,kBAACkK,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAY/K,UAAW4K,EAAWjQ,MAAOT,MAAM,gBAAgB8Q,cAAY,GAA3E,uBAGA,kBAACD,GAAA,EAAD,CAAYnK,QAAQ,KAAKnH,UAAU,MAAnC,wB,4FC5F1BwR,GAAYlR,cAAW,SAACC,GAAD,MAAU,CACnC8P,KAAK,CACDjN,SAAU,OACVkN,IAAK,MACLC,KAAM,MACN1O,aAAa,GACb2B,UAAW,yBACXgN,eAAgB,OAEhBpO,WAAY,OACZqO,gBAAiB,oDACjB,UAAU,CACNC,mBAAmB,UAG3Be,SAAS,CACLhR,MAAM,SAEViR,WAAW,CACP3P,gBAAiB,UACjBtB,MAAM,QACNkR,WAAW,QAEfxN,KAAK,CACD3C,QAAQ,GACRoQ,aAAa,GACbtP,MAAO,OACPtB,YAAY,IAEhBsF,UAAW,CACPnF,QAAS,OACTY,gBAAgB,QAChBF,aAAa,IAEjBP,MAAO,CACH+C,OAAQ9D,EAAMU,QAAQ,QA6Jf4Q,GA1JE,WACb,IAAM1L,EAAUqL,KAEVM,EAAe,SAAC/G,GAClBA,EAAEC,kBAJW,EA0GgBpB,mBAAS,mBAnGzB,kBACb,kBAACyH,GAAA,EAAD,CAAa9K,UAAWJ,EAAQsL,UAC5B,kBAACH,GAAA,EAAD,CAAYC,cAAY,EAACpK,QAAQ,KAAKnH,UAAU,KAAKuG,UAAWJ,EAAQsL,UACpE,kBAAC,KAAD,MADJ,WAGA,kBAACH,GAAA,EAAD,CAAYnK,QAAQ,QAAQ1G,MAAM,gBAAgBT,UAAU,IAAIuG,UAAWJ,EAAQsL,UAAnF,mBAGA,kBAACH,GAAA,EAAD,CAAYnK,QAAQ,UAAU1G,MAAM,gBAAgBT,UAAU,IAAIuG,UAAWJ,EAAQsL,UAArF,kBA2FkC,OA1GzB,mBA0GVzR,EA1GU,aA2GkB4J,mBAAS,mBAtF3B,kBACb,kBAACvD,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIE,GAAI,GAAID,GAAI,IAC3B,kBAACJ,GAAA,EAAD,CAAMC,WAAS,EAACrF,QAAS,GACrB,kBAACoF,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIE,GAAI,GAAID,GAAI,GAC3B,yBAAKF,UAAWJ,EAAQG,WACpB,kBAACyL,GAAA,EAAD,CAAOC,UAAU,KAAKC,IAAKC,EAAMC,cAAY,EAACC,eAAa,GACvD,0BAAM7L,UAAWJ,EAAQhC,KAAMiK,YAAU,EAACb,SAAUuE,GAChD,kBAAClD,GAAA,EAAD,CACIP,aAAa,eACbQ,MAAM,WACN7H,MAAO,CAAE3C,OAAQ,GACjBgO,YAAY,cACZC,WAAS,EACTjO,OAAO,SACPkO,gBAAiB,CACbC,QAAQ,GAEZrL,QAAQ,aAEZ,kBAACyH,GAAA,EAAD,CACIP,aAAa,YACbQ,MAAM,QACN7H,MAAO,CAAE3C,OAAQ,GACjBgO,YAAa,kBACbC,WAAS,EACTjO,OAAO,SACPkO,gBAAiB,CACbC,QAAQ,GAEZrL,QAAQ,aAEZ,kBAACyH,GAAA,EAAD,CACIP,aAAa,eACbQ,MAAM,WACNlT,KAAK,WACLqL,MAAO,CAAE3C,OAAQ,GACjBgO,YAAY,WACZC,WAAS,EACTjO,OAAO,SACPkO,gBAAiB,CACbC,QAAQ,GAEZrL,QAAQ,aAEZ,kBAACyH,GAAA,EAAD,CACIP,aAAa,gBACbQ,MAAM,kBACNlT,KAAK,WACLqL,MAAO,CAAE3C,OAAQ,GACjBgO,YAAY,WACZC,WAAS,EACTjO,OAAO,SACPkO,gBAAiB,CACbC,QAAQ,GAEZrL,QAAQ,aAEZ,kBAACuI,GAAA,EAAD,CACI1I,MAAO,CAAC3E,WAAY,GAAG4E,aAAa,OAAOjG,YAAY,QACvDmG,QAAQ,YACRxL,KAAK,SACL8E,MAAM,UACNgS,QAASC,EACTnM,UAAWJ,EAAQmD,OACnBqG,UAAW,kBAAC,KAAD,OAPf,UAWA,kBAACD,GAAA,EAAD,CACI1I,MAAO,CAACC,aAAa,OAAOjG,YAAY,QACxCmG,QAAQ,YACR1G,MAAM,YACNgS,QAAS,SAAC1H,GAAD,OAAK4H,EAAa5H,IAC3BxE,UAAWJ,EAAQmD,OACnBqG,UAAW,kBAAC,KAAD,OANf,iBAkBgB,QA3G3B,mBA2GViD,EA3GU,aA4GOhJ,oBAAS,IA5GhB,mBA4GVsI,EA5GU,KA4GJW,EA5GI,OA6GiBjJ,oBAAS,GA7G1B,mBA6GVkJ,EA7GU,KA6GCC,EA7GD,KA8GXJ,EAAe,WACjBE,GAAQ,SAACG,GAAD,OAAWA,MAEjBN,EAAc,WAChBK,GAAa,IAEXE,EAAc,SAACC,EAAOC,GACT,cAAXA,GAIJJ,GAAa,IAEjB,OACI,kBAAC1M,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIE,GAAI,GAAID,GAAI,IAC3B,kBAACJ,GAAA,EAAD,CAAMC,WAAS,EAACrF,QAAS,GACrB,kBAACoF,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIE,GAAI,EAAGD,GAAI,GAC1B,kBAAC2K,GAAA,EAAD,CAAM7K,UAAWJ,EAAQkK,KAAMzJ,UAAW,GACrC5G,EACD,kBAACoT,GAAA,EAAD,KACI,kBAAC1D,GAAA,EAAD,CACInJ,UAAWJ,EAAQuL,WACnB9I,KAAK,QACLnI,MAAM,YACNgS,QAAS,SAAC1H,GAAK4H,EAAa5H,KAJhC,WAWXmH,EACGU,EACC,KACL,kBAACS,GAAA,EAAD,CAAUnB,KAAMY,EAAWQ,iBAAkB,IAAMC,QAASN,GACxD,kBAAC/L,GAAA,EAAD,CAAOqM,QAASN,EAAa7L,SAAS,WAAtC,qBCzJLtH,gBALS,SAAAtB,GAAK,MAAK,CAC9BG,KAAMH,EAAMG,KACZkI,OAAOrI,EAAMD,SAGsB,CAACpD,YAAzB2E,EAnCG,SAAC,GAAa,EAAZ3E,SACAkF,KADa,IAGxB2P,EAAOC,cAAPD,IACCE,EAC2B,eAA7B3B,OAAOtR,SAASkT,SACZ,kBAAC,GAAD,MACC,KAGHqD,EACF,6BACa,aAARxD,EAAoB,kBAAC,GAAD,MAAY,KAGxB,eAARA,EAAqB,kBAAC,GAAD,MAAa,MAG3C,OACI,kBAAC,WAAD,KACKE,EACAsD,M,6jBCvBb,IAmCe1T,gBAJS,SAAAtB,GAAK,MAAK,CAC9BG,KAAMH,EAAMG,QAGuB,GAAxBmB,EAnCO,SAAC,GAAiB,IAAV5C,EAAS,EAAfyB,KAAMzB,KAgBpBiJ,EAdY7F,MAAW,SAACC,GAAD,MAAY,CACrCuF,QAAQ,IACJ3E,QAAS,OACLuB,WAAY,SACZC,eAAgB,WAChBnB,QAASjB,EAAMU,QAAQ,EAAG,IAE/BV,EAAMwF,OAAOD,SAEhBE,QAAS,CACLlF,SAAU,EACNU,QAASjB,EAAMU,QAAQ,OAGnBiQ,GAChB,OACI,0BAAM3K,UAAWJ,EAAQH,SACrB,yBAAKO,UAAWJ,EAAQL,UACvB5I,GAAsB,UAAdA,EAAKuW,KAAkB,kBAAC,GAAD,MAAa,KAC5CvW,GAAsB,UAAdA,EAAKuW,KAAkB,kBAAC,GAAD,MAAa,KAC5CvW,GAAsB,aAAdA,EAAKuW,KAAqB,kBAAC,IAAD,CAAM7W,GAAI,aAAV,YAAuC,S,8MC2JvEkD,gBAHS,SAAAtB,GAAK,MAAI,CAC7BG,KAAMH,EAAMG,QAEwB,CAAEjC,UAA3BoD,EApKU,SAAC,GAAwB,IAAjB5C,EAAgB,EAAtByB,KAAMzB,KAAMR,EAAU,EAAVA,OAE7ByJ,EAAUrB,KACXkL,EAAOC,cAAPD,IACD0D,EAAc,CAAC,UAAU,OAAO,WAAW,eAC3CC,EAAe,CAAC,aAAa,UAAU,WAAW,eAClDC,EAAe,CAAC,aAAa,SAAS,aACpCC,EAC2B,eAA7BtF,OAAOtR,SAASkT,SAA4B,YAAY,UAEtDjS,EACF,iCACI,kBAAC4V,GAAA,EAAD,KACI,kBAAC,IAAD,CAAMlX,GAAI,aAAe2J,UAAWJ,EAAQpB,SACxC,kBAACgP,GAAA,EAAD,CAAUzK,QAAM,GACZ,kBAAC0K,GAAA,EAAD,KAAe,kBAAC,KAAD,CAAevT,MAAOoT,KACrC,kBAACI,GAAA,EAAD,CAAcC,QAAQ,gBAI9B,kBAAC,IAAD,CAAMtX,GAAE,kBAAqB2J,UAAWJ,EAAQpB,SAC5C,kBAACgP,GAAA,EAAD,CAAUzK,QAAM,GACZ,kBAAC0K,GAAA,EAAD,KAAe,kBAAC,KAAD,CAAYvT,MAAOuP,IAAQ0D,EAAY,GAAK,YAAY,aACvE,kBAACO,GAAA,EAAD,CAAcC,QAAQ,WAG9B,kBAAC,IAAD,CAAMtX,GAAI,kBAAmB2J,UAAWJ,EAAQpB,SAC5C,kBAACgP,GAAA,EAAD,CAAUzK,QAAM,GACZ,kBAAC0K,GAAA,EAAD,KAAe,kBAAC,KAAD,CAAcvT,MAAOuP,IAAQ0D,EAAY,GAAK,YAAY,aACzE,kBAACO,GAAA,EAAD,CAAcC,QAAQ,QAAQzT,MAAOuP,IAAQ0D,EAAY,GAAK,YAAY,eAKtF,kBAACS,GAAA,EAAD,MACA,kBAACL,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUzK,QAAM,EAACmJ,QAAS/V,GACtB,kBAACsX,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAKhCpW,EACF,iCACI,kBAACgW,GAAA,EAAD,KACI,kBAAC,IAAD,CAAMlX,GAAI,aAAe2J,UAAWJ,EAAQpB,SACxC,kBAACgP,GAAA,EAAD,CAAUzK,QAAM,GACZ,kBAAC0K,GAAA,EAAD,KAAe,kBAAC,KAAD,CAAevT,MAAOoT,KACrC,kBAACI,GAAA,EAAD,CAAcC,QAAQ,gBAG9B,kBAAC,IAAD,CAAMtX,GAAI,qBAAsB2J,UAAWJ,EAAQpB,SAC/C,kBAACgP,GAAA,EAAD,CAAUzK,QAAM,GACZ,kBAAC0K,GAAA,EAAD,KAAe,kBAAC,KAAD,CAAYvT,MAAOuP,IAAQ2D,EAAa,GAAK,YAAY,aACxE,kBAACM,GAAA,EAAD,CAAcC,QAAQ,eAAezT,MAAOuP,IAAQ2D,EAAa,GAAK,YAAY,cAG1F,kBAACQ,GAAA,EAAD,MACA,kBAAC,IAAD,CAAMvX,GAAE,wBAA2B2J,UAAWJ,EAAQpB,SAClD,kBAACgP,GAAA,EAAD,CAAUzK,QAAM,GACZ,kBAAC0K,GAAA,EAAD,KAAe,kBAAC,KAAD,CAAYvT,MAAOuP,IAAQ2D,EAAa,GAAK,YAAY,aACxE,kBAACM,GAAA,EAAD,CAAcC,QAAQ,aAAazT,MAAOuP,IAAQ2D,EAAa,GAAK,YAAY,cAIxF,kBAAC,IAAD,CAAM/W,GAAI,yBAA0B2J,UAAWJ,EAAQpB,SACnD,kBAACgP,GAAA,EAAD,CAAUzK,QAAM,GACZ,kBAAC0K,GAAA,EAAD,KAAe,kBAAC,KAAD,CAAcvT,MAAOuP,IAAQ2D,EAAa,GAAK,YAAY,aAC1E,kBAACM,GAAA,EAAD,CAAcC,QAAQ,oBAKlC,kBAACC,GAAA,EAAD,MACA,kBAAC,IAAD,CAAMvX,GAAI,sBAAuB2J,UAAWJ,EAAQpB,SAChD,kBAACgP,GAAA,EAAD,CAAUzK,QAAM,GACZ,kBAAC0K,GAAA,EAAD,KACI,kBAAC,KAAD,CAAcvT,MAAOuP,IAAQ2D,EAAa,GAAK,YAAY,aAE/D,kBAACM,GAAA,EAAD,CAAcC,QAAQ,eAG9B,kBAACJ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUzK,QAAM,EAACmJ,QAAS/V,GACtB,kBAACsX,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAMlC,iCACI,kBAACJ,GAAA,EAAD,KACI,kBAAC,IAAD,CAAMlX,GAAI,aAAe2J,UAAWJ,EAAQpB,SACxC,kBAACgP,GAAA,EAAD,CAAUzK,QAAM,GACZ,kBAAC0K,GAAA,EAAD,KAAe,kBAAC,KAAD,CAAevT,MAAOoT,KACrC,kBAACI,GAAA,EAAD,CAAcC,QAAQ,iBAIlC,kBAACC,GAAA,EAAD,MACA,kBAACL,GAAA,EAAD,KACI,kBAAC,IAAD,CAAMlX,GAAI,0BAA4B2J,UAAWJ,EAAQpB,SACrD,kBAACgP,GAAA,EAAD,CAAUzK,QAAM,GACZ,kBAAC0K,GAAA,EAAD,KAAe,kBAAC,KAAD,CAAavT,MAAOuP,IAAQ4D,EAAa,GAAK,YAAY,aACzE,kBAACK,GAAA,EAAD,CAAcC,QAAQ,oBAG9B,kBAAC,IAAD,CAAMtX,GAAI,oBAAsB2J,UAAWJ,EAAQpB,SAC/C,kBAACgP,GAAA,EAAD,CAAUzK,QAAM,GACZ,kBAAC0K,GAAA,EAAD,KAAe,kBAAC,KAAD,CAAkBvT,MAAOuP,IAAQ4D,EAAa,GAAK,YAAY,aAC9E,kBAACK,GAAA,EAAD,CAAcC,QAAQ,aAG9B,kBAAC,IAAD,CAAMtX,GAAI,uBAAyB2J,UAAWJ,EAAQpB,SAClD,kBAACgP,GAAA,EAAD,CAAUzK,QAAM,GACZ,kBAAC0K,GAAA,EAAD,KAAe,kBAAC,KAAD,CAAiBvT,MAAOuP,IAAQ4D,EAAa,GAAK,YAAY,aAC7E,kBAACK,GAAA,EAAD,CAAcC,QAAQ,aAIlC,kBAACC,GAAA,EAAD,MACA,kBAACL,GAAA,EAAD,KACI,kBAAC,IAAD,CAAMlX,GAAI,wBAA0B2J,UAAWJ,EAAQpB,SACnD,kBAACgP,GAAA,EAAD,CAAUzK,QAAM,GACZ,kBAAC0K,GAAA,EAAD,KAAe,kBAAC,KAAD,CAAavT,MAAOuP,IAAQ4D,EAAa,GAAK,YAAY,aACzE,kBAACK,GAAA,EAAD,CAAcC,QAAQ,kBAG9B,kBAAC,IAAD,CAAMtX,GAAI,oBAAsB2J,UAAWJ,EAAQpB,SAC/C,kBAACgP,GAAA,EAAD,CAAUzK,QAAM,GACZ,kBAAC0K,GAAA,EAAD,KAAe,kBAAC,KAAD,CAAkBvT,MAAOuP,IAAQ4D,EAAa,GAAK,YAAY,aAC9E,kBAACK,GAAA,EAAD,CAAcC,QAAQ,aAG9B,kBAAC,IAAD,CAAMtX,GAAI,aAAe2J,UAAWJ,EAAQpB,SACxC,kBAACgP,GAAA,EAAD,CAAUzK,QAAM,GACZ,kBAAC0K,GAAA,EAAD,KAAe,kBAAC,KAAD,CAAevT,MAAOoT,KACrC,kBAACI,GAAA,EAAD,CAAcC,QAAQ,iBAIlC,kBAACC,GAAA,EAAD,MACA,kBAACL,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUzK,QAAM,EAACmJ,QAAS/V,GACtB,kBAACsX,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAMtC,OACIhX,EAAKuW,KACS,aAAdvW,EAAKuW,KAAqBvV,EAASJ,KC7E5BgC,gBALS,SAAAtB,GAAK,MAAK,CAC9BG,KAAMH,EAAMG,KACZxB,QAASqB,EAAMrB,WAGqB,GAAzB2C,EAjFI,SAAC,GAId,IAAD,QAHDnB,KAAW5B,GAGV,EAHKG,KAGL,EAHUH,iBAEXJ,GACC,EAH0BK,QAG1B,EAFDG,QAASA,QAER,EADDR,SAEMwJ,EAAUrB,KACVvE,EAAQ6T,eAFb,EAGuBC,IAAMzK,UAAS,GAHtC,mBAGMsI,EAHN,KAGYW,EAHZ,KAgBD,OAJK9V,GACDJ,EAAQ2X,KAAK,KAIb,yBAAK/N,UAAWJ,EAAQhD,MACpB,kBAACoR,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CACI/T,MAAM,YACNmB,SAAS,QACT2E,UAAWkO,aAAKtO,EAAQjB,OAAT,eACViB,EAAQb,YAAc4M,KAG3B,kBAACwC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIlU,MAAM,UACNmU,aAAW,cACXnC,QAzBK,WACrBI,GAAQ,IAyBQgC,KAAK,QACLtO,UAAWkO,aAAKtO,EAAQpF,WAAT,eACVoF,EAAQX,KAAO0M,KAGpB,kBAAC,KAAD,OAEJ,kBAACZ,GAAA,EAAD,CAAYnK,QAAQ,KAAK2N,QAAM,GAA/B,eAKR,kBAACC,GAAA,EAAD,CACI5N,QAAQ,YACRZ,UAAWkO,aAAKtO,EAAQvF,QAAT,mBACVuF,EAAQR,WAAauM,GADX,cAEV/L,EAAQP,aAAesM,GAFb,IAIf/L,QAAS,CACL7E,MAAOmT,cAAI,mBACNtO,EAAQR,WAAauM,GADf,cAEN/L,EAAQP,aAAesM,GAFjB,MAMf,yBAAK3L,UAAWJ,EAAQL,SACpB,kBAAC6O,GAAA,EAAD,CAAYlC,QAhDF,WACtBI,GAAQ,KAgD6B,QAApBtS,EAAMyR,UAAsB,kBAAC,KAAD,MAAuB,kBAAC,KAAD,QAG5D,kBAACmC,GAAA,EAAD,MACA,kBAAC,GAAD,OAEJ,kBAAC,GAAD,U,gTClEZ,IAgJerU,gBANS,SAAAtB,GAAK,MAAK,CAC9BzB,gBAAiByB,EAAMG,KAAK5B,gBAC5BwB,MAAMC,EAAMD,MACZpB,QAASqB,EAAMrB,QACfwB,KAAMH,EAAMG,QAIZ,CAAExD,WAAU6Z,S5BlIQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,SAApB,8CAAkC,WAAM5Z,GAAN,qBAAAc,EAAA,6DAClD+Y,EAAS,CACblZ,QAAS,CACP,eAAgB,qBAGdmZ,EAAOxF,KAAKyF,UAAU,CAAEL,WAAUC,QAAOC,WAAU1B,KAAK,aANN,kBASpCzX,IAAMyB,KAAK,qBAAsB4X,EAAMD,GATH,OAShD5Y,EATgD,OAUtDjB,EAAS,CACPI,KF9C0B,mBE+C1BC,QAASY,EAAIC,OAEflB,EAASa,KAd6C,mDAiBhDmZ,EAAS,KAAI9N,SAAShL,KAAK8Y,SAG/BA,EAAO/K,SAAQ,SAAAlN,GAAK,OAAI/B,EAASJ,EAASmC,EAAMlC,IAAK,aAGvDG,EAAS,CACPI,KF1DuB,kBEkC6B,0DAAlC,wD4BgITmE,EAhJE,SAAC,GAAmE,IAAjE3E,EAAgE,EAAhEA,SAAU6Z,EAAsD,EAAtDA,SAASjY,EAA6C,EAA7CA,gBAAyBI,EAAoB,EAA7BA,QAASA,QAASR,EAAW,EAAXA,QAC/DwJ,EAAUqL,KADgE,EAEhD5H,mBAAS,CACrCsL,MAAO,GACPC,SAAU,GACVK,UAAW,KALiE,mBAEzElO,EAFyE,KAE/DmO,EAF+D,OAOxD7L,oBAAS,GAP+C,mBAOzEsI,EAPyE,KAOnEW,EAPmE,KAQ1EvE,EAAW,SAAAvD,GAAC,OACd0K,E,2VAAY,IAAKnO,EAAN,eAAiByD,EAAEgE,OAAOD,KAAO/D,EAAEgE,OAAOvF,UAElD0L,EAA8B5N,EAA9B4N,MAAOC,EAAuB7N,EAAvB6N,SAASK,EAAclO,EAAdkO,UAEjBjI,EAAQ,uCAAG,WAAMxC,GAAN,SAAA1O,EAAA,sDACb0O,EAAEC,iBACc,KAAbmK,EACKA,IAAaK,EACbra,EAAS,yBAA0B,UAEnC0X,GAASX,GACT8C,EAAS,CAACE,QAAOC,cAGrBha,EAAS,iCAAiC,SAVjC,2CAAH,sDAaRua,EACF7Z,YAAW,SAACkP,GAAD,OACPpO,EAAQ2X,KAAR,gBACD,KAEDqB,EACF5Y,GAAmB2Y,EACf,kBAACE,GAAA,EAAD,CAAUrP,UAAWJ,EAAQzF,SAAUwR,KAAMA,EAAMO,QAASlF,GACxD,yBAAKvG,MAAO,CAACmC,UAAU,WACnB,wBAAInC,MAAO,CAACC,aAAa,SAAzB,qBACA,kBAAC4O,GAAA,EAAD,CAAkBpV,MAAM,gBAG/BqV,aAAaJ,GAQtB,OANI3Y,IACgB,OAAZI,GACAR,EAAQ2X,KAAK,kBAEjB3X,EAAQ2X,KAAK,eAGb,kBAACyB,GAAA,EAAD,CAAW/V,UAAU,OAAOoD,SAAS,MACjC,yBAAKmD,UAAWJ,EAAQ7E,OAClBvE,EA4EG4Y,EA3ED,iCACI,kBAACK,GAAA,EAAD,CAAQzP,UAAWJ,EAAQvC,QACvB,kBAAC,KAAD,OAEJ,kBAAC0N,GAAA,EAAD,CAAYtR,UAAU,KAAKmH,QAAQ,MAAnC,YAGA,kBAAC,GAAD,MACA,0BAAMZ,UAAWJ,EAAQhC,KAAMiK,YAAU,EAACb,SAAU,SAAAxC,GAAC,OAAGwC,EAASxC,KAC7D,kBAAC6D,GAAA,EAAD,CACIzH,QAAQ,WACR9C,OAAO,SACP4R,UAAQ,EACR3D,WAAS,EACT9W,GAAG,QACHgO,MAAO0L,EACP5G,SAAU,SAACvD,GAAD,OAAKuD,EAASvD,IACxB8D,MAAM,gBACNC,KAAK,QACLT,aAAa,QACb6H,WAAS,IAEb,kBAACtH,GAAA,EAAD,CACIzH,QAAQ,WACR9C,OAAO,SACP4R,UAAQ,EACR3D,WAAS,EACTxD,KAAK,WACLtF,MAAO2L,EACP7G,SAAU,SAACvD,GAAD,OAAKuD,EAASvD,IACxB8D,MAAM,kBACNlT,KAAK,WACLH,GAAG,WACH6S,aAAa,qBAEjB,kBAACO,GAAA,EAAD,CACIzH,QAAQ,WACR9C,OAAO,SACP4R,UAAQ,EACR3D,WAAS,EACTxD,KAAK,YACLtF,MAAOgM,EACPlH,SAAU,SAACvD,GAAD,OAAKuD,EAASvD,IACxB8D,MAAM,kBACNlT,KAAK,WACLH,GAAG,YACH6S,aAAa,qBAEjB,kBAAC8H,GAAA,EAAD,CACIC,QAAS,kBAACC,GAAA,EAAD,CAAU7M,MAAM,WAAW/I,MAAM,YAC1CoO,MAAM,gBAGV,kBAACa,GAAA,EAAD,CACI/T,KAAK,SACL2W,WAAS,EACTnL,QAAQ,YACR1G,MAAM,YACN8F,UAAWJ,EAAQ/B,QALvB,UAOA,kBAACiC,GAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GACX,kBAAC,IAAD,CAAM5J,GAAI,IAAKoK,MAAO,CAAC/B,UAAU,OAAOD,eAAe,SACnD,iDAIR,kBAACqB,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GACX,kBAAC,IAAD,CAAM5J,GAAI,SAAUoK,MAAO,CAAC/B,UAAU,OAAOD,eAAe,SACxD,8D,6FChI3BsR,GAAoB,yDAAM,WAAM/a,GAAN,eAAAc,EAAA,+EAEjBL,IAAMO,IAAI,mBAFO,OAE7BC,EAF6B,OAInCjB,EAAS,CACPI,K/BRqB,c+BSrBC,QAASY,EAAIC,OANoB,gDASnClB,EAAS,CACPI,K/BduB,gB+BevBC,QAAS,CAAER,IAAK,KAAIqM,SAASC,WAAYC,OAAQ,KAAIF,SAASE,UAX7B,yDAAN,uD,qBCVlB,qBACX,kBAAC,WAAD,KACI,yBAAKpB,UAAU,eACVsC,IAAK0N,KACLvP,MAAO,CAAE1E,MAAO,OAAQ+B,OAAQ,OAAQlD,QAAS,QAAQS,SAAU,WAAY2O,KAAM,MAAMD,IAAK,OAChG3H,IAAI,iB,+NCgBjB,IAwQe7I,gBANS,SAAAtB,GAAK,MAAK,CAC9BG,KAAMH,EAAMG,KACZxB,QAASqB,EAAMrB,QACf0J,OAAOrI,EAAMD,SAKb,CAACiY,cF5MwB,SAC3BlP,EACA3K,GAF2B,IAG3B8Z,EAH2B,sGAIxB,WAAMlb,GAAN,mBAAAc,EAAA,sEAEK+Y,EAAS,CACblZ,QAAS,CACP,eAAgB,qBAJnB,SASiBF,IAAMyB,KAAK,cAAe6J,EAAU8N,GATrD,OASK5Y,EATL,OAWDjB,EAAS,CACPI,K/B5FqB,c+B6FrBC,QAASY,EAAIC,OAGflB,EAASJ,EAASsb,EAAO,kBAAoB,kBAAmB,YAE3DA,GACH9Z,EAAQ2X,KAAK,KAnBd,mDAsBKiB,EAAS,KAAI9N,SAAShL,KAAK8Y,SAG/BA,EAAO/K,SAAQ,SAAAlN,GAAK,OAAI/B,EAASJ,EAASmC,EAAMlC,IAAK,aAGvDG,EAAS,CACPI,K/B9GuB,gB+B+GvBC,QAAS,CAAER,IAAK,KAAIqM,SAASC,WAAYC,OAAQ,KAAIF,SAASE,UA9B/D,0DAJwB,uDE4MV2O,sBAFJxW,EAxQO,SAAC,GAUnB,IAAD,IATCnB,KACIzB,EAQL,EARKA,KACAF,EAOL,EAPKA,QACAD,EAML,EANKA,gBAEJI,EAID,EAJCA,QACAqZ,EAGD,EAHCA,cACAF,EAED,EAFCA,kBACA3Z,EACD,EADCA,QACD,EACiCiN,mBAAS,CACrCqL,SAAU,GACVyB,QAAS,GACTzZ,SAAU,GACV0K,OAAQ,GACRgP,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,UAAW,KAThB,mBACQxP,EADR,KACkBmO,EADlB,OAYmD7L,oBAAS,GAZ5D,mBAYQmN,EAZR,KAY6BC,EAZ7B,KAeK/B,EASA3N,EATA2N,SACAyB,EAQApP,EARAoP,QACAzZ,EAOAqK,EAPArK,SACA0K,EAMAL,EANAK,OACAgP,EAKArP,EALAqP,IACAC,EAIAtP,EAJAsP,QACAC,EAGAvP,EAHAuP,SACAC,EAEAxP,EAFAwP,UAIExI,EAAW,SAAAvD,GAAC,OACd0K,E,2VAAY,IAAKnO,EAAN,eAAiByD,EAAEgE,OAAOD,KAAO/D,EAAEgE,OAAOvF,UAqCnDrD,EA9BW7F,cAAW,SAACC,GAAD,MAAY,CACpCyF,QAAS,CACLlF,SAAU,EACVwC,WAAY/C,EAAMU,QAAQ,GAC1BgF,cAAe1F,EAAMU,QAAQ,IAEjCM,WAAW,CACPA,WAAYhB,EAAM0B,QAAQsC,UAAUC,MACpC/C,UAAWlB,EAAMU,QAAQ,GACzBY,aAAa,IACb4C,UAAU,SAEdwE,UAAU,CACNxI,MAAO,OACPyI,SAAU,GACVC,UAAU,SACVxG,eAAe,UAEnByG,UAAU,CACN9G,MAAM,OACNb,UAAU,IAEd4H,YAAa,CACT5H,UAAWlB,EAAMU,QAAQ,IAE7BqI,OAAQ,CACJjF,OAAQ9D,EAAMU,QAAQ,OAIdZ,GAKhB,GAJA6N,qBAAU,WACNoI,MACF,CAACA,KAEqB,IAApBvZ,GAA8BI,GAA+B,OAApBA,EAAQA,QACjD,OAAO,kBAAC,IAAD,CAAUP,GAAI,MAEzB,IAAM6W,EACEvW,GAAsB,UAAdA,EAAKuW,KACT,kBAACtE,GAAA,EAAD,CAAahI,QAAQ,WAAWZ,UAAWJ,EAAQiD,WAC/C,kBAACiG,GAAA,EAAD,CAAY7T,GAAG,qCAAf,UACA,kBAAC+T,GAAA,EAAD,CACI0H,QAAQ,oCACRzb,GAAG,8BACHsT,KAAK,SACLtF,MAAO7B,EACP2G,SAAU,SAAAvD,GAAC,OAAIuD,EAASvD,IACxB8D,MAAM,UAEN,kBAACqI,GAAA,EAAD,CAAU1N,MAAM,IACZ,qCAEJ,kBAAC0N,GAAA,EAAD,CAAU1N,MAAO,WAAjB,WACA,kBAAC0N,GAAA,EAAD,CAAU1N,MAAO,iBAAjB,mBAEQ,KAGtBkM,EACF7Z,YAAW,SAACkP,GAAD,OACP5N,GAA+B,OAApBA,EAAQA,QAAmBR,EAAQ2X,KAAK,KAAK,OACzD,KAEP,OACI,kBAAC,WAAD,KAEKoB,EAAU1Y,GAAWG,IAA+B,IAApBA,EAAQH,QAAkB,kBAACma,GAAD,MAC3D,8BACI,kBAACxQ,GAAA,EAAD,CAAOC,UAAW,EAAGL,UAAWJ,EAAQ5E,YACpC,kBAACwU,GAAA,EAAD,KACI,kBAAC1P,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC3B,kBAACL,GAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIM,MAAO,CAACxF,QAAQ,SAC/C,wBAAI+E,UAAWJ,EAAQ8C,WAAvB,yBAOpB,kBAAC8M,GAAA,EAAD,KACI,kBAAC1P,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIE,GAAI,GAAID,GAAI,GAAIO,MAAO,CAACvF,UAAU,KACjD,kBAAC4E,GAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,GAAA,EAAD,CAAMhI,MAAI,EAACoI,GAAI,IAGf,kBAACJ,GAAA,EAAD,CAAMhI,MAAI,EAACoI,GAAI,EAAGD,GAAI,IAClB,kBAAC,GAAD,MACA,0BAAMD,UAAWJ,EAAQhD,KAAMiL,YAAU,EAACC,aAAa,MAAMd,SAAU,SAACxC,GAAD,OA9FlF,SAAAA,GACbA,EAAEC,iBACFwL,EAAclP,EAAU3K,GA4F4E4Q,CAASxC,KACjF,kBAAC6D,GAAA,EAAD,CACIrI,UAAWJ,EAAQiD,UACnB5N,GAAG,iBACHqT,MAAO3R,GAAoB,UAAdA,EAAKuW,KAAiB,aAAa,WAChDtM,QAAQ,WACR2H,KAAK,WACLtF,MAAOyL,EACP3G,SAAU,SAAAvD,GAAC,OAAIuD,EAASvD,MAE5B,kBAAC6D,GAAA,EAAD,CACIrI,UAAWJ,EAAQiD,UACnB5N,GAAG,iBACHqT,MAAM,UACN1H,QAAQ,WACR2H,KAAK,UACLtF,MAAOkN,EACPpI,SAAU,SAAAvD,GAAC,OAAIuD,EAASvD,MAE5B,kBAAC6D,GAAA,EAAD,CACIrI,UAAWJ,EAAQiD,UACnB5N,GAAG,iBACHqT,MAAM,WACN1H,QAAQ,WACR6H,WAAS,EACTC,KAAM,EACNC,QAAS,EACTJ,KAAK,WACLtF,MAAOvM,EACPqR,SAAU,SAAAvD,GAAC,OAAIuD,EAASvD,MAG5B,kBAAC6D,GAAA,EAAD,CACIrI,UAAWJ,EAAQiD,UACnB5N,GAAG,iBACHqT,MAAM,MACN1H,QAAQ,WACR2H,KAAK,MACLtF,MAAOmN,EACPrI,SAAU,SAAAvD,GAAC,OAAIuD,EAASvD,MAE3B0I,EAEJsD,GACG,kBAAC,WAAD,KACI,kBAAC5H,GAAA,EAAD,CAAa5I,UAAWJ,EAAQiD,WAC5B,kBAACiG,GAAA,EAAD,CAAYC,QAAQ,6BAApB,WACA,kBAAC8H,GAAA,EAAD,CACI5b,GAAG,4BACHsT,KAAK,UACLtF,MAAOoN,EACPtI,SAAU,SAAAvD,GAAC,OAAIuD,EAASvD,IACxBsM,eACI,kBAACC,GAAA,EAAD,CAAgB1V,SAAS,SACrB,kBAAC,KAAD,UAKhB,kBAACuN,GAAA,EAAD,CAAa5I,UAAWJ,EAAQiD,WAC5B,kBAACiG,GAAA,EAAD,CAAYC,QAAQ,6BAApB,YACA,kBAAC8H,GAAA,EAAD,CACI5b,GAAG,4BACHsT,KAAK,WACLtF,MAAOqN,EACPvI,SAAU,SAAAvD,GAAC,OAAIuD,EAASvD,IACxBsM,eACI,kBAACC,GAAA,EAAD,CAAgB1V,SAAS,SACrB,kBAAC,KAAD,UAKhB,kBAACuN,GAAA,EAAD,CAAa5I,UAAWJ,EAAQiD,WAC5B,kBAACiG,GAAA,EAAD,CAAYC,QAAQ,6BAApB,aACA,kBAAC8H,GAAA,EAAD,CACI5b,GAAG,4BACHsT,KAAK,YACLtF,MAAOsN,EACPxI,SAAU,SAAAvD,GAAC,OAAIuD,EAASvD,IACxBsM,eACI,kBAACC,GAAA,EAAD,CAAgB1V,SAAS,SACrB,kBAAC,KAAD,WAOpB,kBAAC8N,GAAA,EAAD,CACIvI,QAAQ,YACR1G,MAAM,YACN9E,KAAK,SACLiN,KAAK,QACLrC,UAAWJ,EAAQmD,OACnBqG,UAAW,kBAAC,KAAD,OANf,QAUA,kBAACD,GAAA,EAAD,CACIvI,QAAQ,YACR1G,MAAM,UACNmI,KAAK,QACLrC,UAAWJ,EAAQmD,OACnBmJ,QAAS,kBAAMuE,GAAoBD,KALvC,iBAWR,kBAAC1Q,GAAA,EAAD,CAAMhI,MAAI,EAACoI,GAAI,QAKvBqP,aAAaJ,O,yOC1PjC,IAiIe5V,gBANS,SAAAtB,GAAK,MAAK,CAC9BzB,gBAAiByB,EAAMG,KAAK5B,gBAC5B4B,KAAMH,EAAMG,KACZkI,OAAOrI,EAAMD,SAKb,CAACpD,WAAUoc,MhCtFM,SAAC,GAAD,IAAErC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAASqC,EAAlB,EAAkBA,UAAlB,EAA4BC,UAA5B,8CAA2C,WAAMlc,GAAN,qBAAAc,EAAA,6DACxD+Y,EAAS,CACblZ,QAAS,CACP,eAAgB,qBAIdmZ,EAAOxF,KAAKyF,UAAU,CAAEJ,QAAOC,aAPyB,kBAS1CnZ,IAAMyB,KAAK,kBAAmB4X,EAAMD,GATM,OAStD5Y,EATsD,OAUzDgb,GACDlb,aAAauC,QAAQ,aAAcgR,KAAKyF,UAAU,CAACJ,QAAMC,WAASqC,eAEpEjc,EACI,CACEI,KF5EmB,gBE6EnBC,QAASY,EAAIC,OAGnBlB,EAASa,KAnBmD,mDAqBtDmZ,EAAS,KAAI9N,SAAShL,KAAK8Y,SAE/BA,EAAO/K,SAAQ,SAAAlN,GAAK,OAClB/B,EAASJ,EAASmC,EAAMlC,IAAM,aAIlCG,EAAS,CACPI,KFzFoB,eE4DsC,0DAA3C,wDgCoFNmE,EAjID,SAAC,GAAmC,IAAlCyX,EAAiC,EAAjCA,MAAMxa,EAA2B,EAA3BA,gBAAgBJ,EAAW,EAAXA,QAE5BwJ,EAAUqL,KACVpL,EAAWtB,KACbzI,EAAIwT,KAAKC,MAAMxT,aAAaQ,QAAQ,eAJK,EAKb8M,mBAAe,OAANvN,GAAaA,EAAEmb,WALX,mBAKtCA,EALsC,KAK3BE,EAL2B,OAOb9N,mBAAS,CACrCsL,MAAW,OAAJ7Y,EAASA,EAAE6Y,MAAM,GACxBC,SAAc,OAAJ9Y,EAASA,EAAE8Y,SAAS,KATW,mBAOtC7N,EAPsC,KAO5BmO,EAP4B,OAWrBpB,IAAMzK,UAAS,GAXM,mBAWtCsI,EAXsC,KAWhCW,EAXgC,KAavCvE,EAAW,SAAAvD,GAAC,OACd0K,E,2VAAY,IAAKnO,EAAN,eAAiByD,EAAEgE,OAAOD,KAAO/D,EAAEgE,OAAOvF,UAEjD0L,EAAoB5N,EAApB4N,MAAOC,EAAa7N,EAAb6N,SACT5H,EAAQ,uCAAG,WAAMxC,GAAN,SAAA1O,EAAA,sDACb0O,EAAEC,iBACF6H,GAASX,GACTqF,EAAM,CAACrC,QAAMC,WAASqC,cAHT,2CAAH,sDAMR9B,EACF7Z,YAAW,SAACkP,GAAD,OACPhO,EAAkBJ,EAAQ2X,KAAR,KAAkB,OACrC,KAEDqD,EACF5a,GAAmB2Y,EACf,kBAACE,GAAA,EAAD,CAAUrP,UAAWJ,EAAQzF,SAAUwR,KAAMA,EAAMO,QAASlF,GACxD,yBAAKvG,MAAO,CAACmC,UAAU,WACnB,wBAAInC,MAAO,CAACC,aAAa,SAAzB,qBACA,kBAAC4O,GAAA,EAAD,CAAkBpV,MAAM,gBAG/BqV,aAAaJ,GAGtB,OACI,kBAACK,GAAA,EAAD,CAAW/V,UAAU,OAAOoD,SAAS,MACjC,yBAAKmD,UAAWJ,EAAQ7E,OACpB,kBAAC,GAAD,MACEvE,EAGgB,KAFd,kBAACuU,GAAA,EAAD,CAAYtR,UAAU,KAAKmH,QAAQ,KAAKH,MAAO,CAACC,aAAa,SAA7D,SAIFlK,EA4DG4a,EA3DD,iCAEI,0BAAMpR,UAAWJ,EAAQhC,KAAMiK,YAAU,EAACb,SAAU,SAAAxC,GAAC,OAAIwC,EAASxC,KAC9D,6BACI,kBAAC6D,GAAA,EAAD,CACIzH,QAAQ,WACR9C,OAAO,SACP4R,UAAQ,EACR3D,WAAS,EACT4D,WAAS,EACT1a,GAAG,QACHqT,MAAM,gBACNrF,MAAO0L,EACP5G,SAAU,SAACvD,GAAD,OAAKuD,EAASvD,IACxB+D,KAAK,QACLT,aAAa,UAEjB,kBAACO,GAAA,EAAD,CACIzH,QAAQ,WACR9C,OAAO,SACP4R,UAAQ,EACR3D,WAAS,EACT9I,MAAO2L,EACP7G,SAAU,SAACvD,GAAD,OAAKuD,EAASvD,IACxB+D,KAAK,WACLD,MAAM,WACNlT,KAAK,WACLH,GAAG,WACH6S,aAAa,qBAEjB,kBAAC8H,GAAA,EAAD,CACIC,QAAS,kBAACC,GAAA,EAAD,CAAU7M,MAAOgO,EAAW/W,MAAM,UAAWmX,QAASJ,EAAYlJ,SA1ElF,SAAAvD,GAAM2M,EAAW3M,EAAEgE,OAAO6I,YA2EnB/I,MAAM,gBAEV,kBAACa,GAAA,EAAD,CACI/T,KAAK,SACL2W,WAAS,EACTnL,QAAQ,YACR1G,MAAM,YACN8F,UAAWH,EAAShC,QALxB,UASA,kBAACiC,GAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GACX,kBAAC,IAAD,CAAM5J,GAAI,IAAKoK,MAAO,CAAC/B,UAAU,OAAOD,eAAe,SACnD,iDAIR,kBAACqB,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GACX,kBAAC,IAAD,CAAM5J,GAAI,YAAaoK,MAAO,CAAC/B,UAAU,OAAOD,eAAe,SAC3D,6DAShC,kBAAC6S,GAAA,EAAD,CAAKC,GAAI,QChHNC,GAbA,WACX,OACI,iCACI,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAcC,OAAK,EAACC,KAAK,aAAajY,UAAWkY,KACjD,kBAAC,EAAD,CAAcF,OAAK,EAACC,KAAK,kBAAkBjY,UAAWkY,KACtD,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAYjY,UAAWmY,KACzC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASjY,UAAWoY,KACtC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,iBAAiBjY,UAAWqY,Q,iJCgQ/CvY,gBAJS,SAAAtB,GAAK,MAAK,CAC9BG,KAAMH,EAAMG,KACZ5B,gBAAiByB,EAAMG,KAAK5B,mBAEQ,CAAEL,UAA3BoD,EAlPD,SAAC,GAAgC,EAA/BnB,KAAgC,IAA3B5B,EAA0B,EAA1BA,gBAAgBL,EAAU,EAAVA,OAC3BC,EAAU2b,cACVnS,EAAU9F,KAF2B,EAGXgU,IAAMzK,SAAS,MAHJ,mBAGpC2O,EAHoC,KAG1BC,EAH0B,OAISnE,IAAMzK,SAAS,MAJxB,mBAIpC6O,EAJoC,KAIhBC,EAJgB,KAMrCC,EAAaC,QAAQL,GACrBM,EAAmBD,QAAQH,GAE3BK,EAAwB,SAAC5F,GAC3BsF,EAAYtF,EAAM6F,gBAGhBC,EAAwB,WAC1BN,EAAsB,OAGpBO,EAAkB,WACpBT,EAAY,MACZQ,KAGEE,EAAuB,SAAChG,GAC1BwF,EAAsBxF,EAAM6F,gBAG1BI,EAAS,8BACTC,EACF,kBAAC,KAAD,CACIb,SAAUA,EACVc,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7C/d,GAAI2d,EACJjQ,SAAS,QACTsQ,aAAW,EACXC,gBAAiB,CAAEH,SAAU,MAAOC,WAAY,SAChDrH,KAAMyG,EACNpF,QAAS0F,GAET,kBAAC/B,GAAA,EAAD,CAAUzE,QAASwG,GACf,kBAACjF,GAAA,EAAD,CAAcvB,QAAS,WAAK9V,EAAQ2X,KAAK,gBACrC,kBAAC,KAAD,CAAepL,SAAS,UACxB,kBAACoI,GAAA,EAAD,CAAYnK,QAAQ,UAAU2N,QAAM,GAApC,eAKR,kBAACoC,GAAA,EAAD,CAAUzE,QAASwG,GACf,kBAACjF,GAAA,EAAD,KACI,kBAAC,KAAD,CAAY9K,SAAS,UACrB,kBAACoI,GAAA,EAAD,CAAYnK,QAAQ,UAAU2N,QAAM,GAApC,gBAKR,kBAACoC,GAAA,EAAD,CAAUzE,QAASwG,GACf,kBAACjF,GAAA,EAAD,KACI,kBAAC,KAAD,CAAc9K,SAAS,UACvB,kBAACoI,GAAA,EAAD,CAAYnK,QAAQ,UAAU2N,QAAM,GAApC,cAKR,kBAACX,GAAA,EAAD,MACA,kBAAC+C,GAAA,EAAD,CAAUzE,QAASwG,GACf,kBAACjF,GAAA,EAAD,CAAcvB,QAAS/V,GACnB,kBAAC,KAAD,CAAewM,SAAS,UACxB,kBAACoI,GAAA,EAAD,CAAYnK,QAAQ,UAAU2N,QAAM,GAApC,aAQV4E,EAAe,qCACfC,EACF5c,EACA,kBAAC,KAAD,CACIwb,SAAUE,EACVY,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7C/d,GAAIke,EACJF,aAAW,EACXC,gBAAiB,CAAEH,SAAU,MAAOC,WAAY,SAChDrH,KAAM2G,EACNtF,QAASyF,GAET,kBAAC9B,GAAA,EAAD,KACI,kBAACvC,GAAA,EAAD,CAAYC,aAAW,mBAAmBnU,MAAM,WAC5C,kBAACmZ,GAAA,EAAD,CAAOC,aAAc,EAAGpZ,MAAM,aAC1B,kBAAC,KAAD,CAAUyI,SAAS,YAG3B,wCAEJ,kBAACgO,GAAA,EAAD,KACI,kBAACvC,GAAA,EAAD,CAAYC,aAAW,4BAA4BnU,MAAM,WACrD,kBAACmZ,GAAA,EAAD,CAAOC,aAAc,GAAIpZ,MAAM,aAC3B,kBAAC,KAAD,CAAmByI,SAAS,YAGpC,6CAEJ,kBAACiL,GAAA,EAAD,MACA,kBAAC+C,GAAA,EAAD,CAAUzE,QAASqG,GACf,kBAAC,KAAD,CACIlE,aAAW,0BACXkF,gBAAc,8BACdC,gBAAc,OACdtZ,MAAM,WAEN,kBAAC,KAAD,OAEJ,wCAGP,kBAAC,KAAD,CACO8X,SAAUE,EACVY,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7C/d,GAAIke,EACJF,aAAW,EACXC,gBAAiB,CAAEH,SAAU,MAAOC,WAAY,SAChDrH,KAAM2G,EACNtF,QAASyF,GAET,kBAAC9B,GAAA,EAAD,KACI,kBAAC8C,GAAA,EAAD,CAAa7S,QAAQ,OAAO1G,MAAM,UAAUmU,aAAW,6BACnD,kBAAClF,GAAA,EAAD,CAAQvI,QAAQ,OAAO1G,MAAM,UAAUgS,QAAS,WAAK9V,EAAQ2X,KAAK,YAAlE,WAGR,kBAAC4C,GAAA,EAAD,KACI,kBAAC8C,GAAA,EAAD,CAAa7S,QAAQ,OAAO1G,MAAM,WAC9B,kBAACiP,GAAA,EAAD,CAAQ+C,QAAS,WAAK9V,EAAQ2X,KAAK,eAAnC,eAMd2F,EACF,iCACI,yBAAK1T,UAAWJ,EAAQlD,gBACpB,kBAAC0R,GAAA,EAAD,CAAYC,aAAW,mBAAmBnU,MAAM,WAC5C,kBAACmZ,GAAA,EAAD,CAAOC,aAAc,EAAGpZ,MAAM,aAC1B,kBAAC,KAAD,CAAUyI,SAAS,YAG3B,kBAACyL,GAAA,EAAD,CAAYC,aAAW,4BAA4BnU,MAAM,WACrD,kBAACmZ,GAAA,EAAD,CAAOC,aAAc,GAAIpZ,MAAM,aAC3B,kBAAC,KAAD,CAAmByI,SAAS,YAGpC,kBAACyL,GAAA,EAAD,CACIE,KAAK,MACLD,aAAW,0BACXkF,gBAAeX,EACfY,gBAAc,OACdtH,QAASqG,EACTrY,MAAM,WAEN,kBAAC,KAAD,CAAeyI,SAAS,YAGhC,yBAAK3C,UAAWJ,EAAQjD,eACpB,kBAACyR,GAAA,EAAD,CACIC,aAAW,YACXkF,gBAAeJ,EACfK,gBAAc,OACdtH,QAASyG,EACTzY,MAAM,WAEN,kBAAC,KAAD,SAOVyZ,EACF,iCACI,yBAAK3T,UAAWJ,EAAQlD,gBACpB,kBAAC+W,GAAA,EAAD,CAAa7S,QAAQ,OAAO1G,MAAM,UAAUmU,aAAW,6BACnD,kBAAClF,GAAA,EAAD,CAAQ+C,QAAS,WAAK9V,EAAQ2X,KAAK,YAAnC,SACA,kBAAC5E,GAAA,EAAD,CAAQ+C,QAAS,WAAK9V,EAAQ2X,KAAK,eAAnC,cAGR,yBAAK/N,UAAWJ,EAAQjD,eACpB,kBAACyR,GAAA,EAAD,CACIC,aAAW,YACXkF,gBAAeJ,EACfK,gBAAc,OACdtH,QAASyG,EACTzY,MAAM,WAEN,kBAAC,KAAD,SAMhB,OACI,kBAAC,WAAD,KACI,kBAAC+T,GAAA,EAAD,CACI/T,MAAM,YACNmB,SAAS,SAET,kBAACmU,GAAA,EAAD,KACI,kBAACrB,GAAA,EAAD,KACI,kBAACpD,GAAA,EAAD,CAAY/K,UAAWJ,EAAQjF,MAAOiG,QAAQ,KAAK2N,QAAM,GAAzD,cAGA,yBAAKvO,UAAWJ,EAAQxE,QACpB,yBAAK4E,UAAWJ,EAAQ5D,YACpB,kBAAC,KAAD,OAEJ,kBAAC4X,GAAA,EAAD,CACI9H,YAAY,eACZlM,QAAS,CACLhD,KAAMgD,EAAQvD,UACdwX,MAAOjU,EAAQtD,YAEnB4M,WAAY,CAAE,aAAc,aAGpC,yBAAKlJ,UAAWJ,EAAQtF,OACvB9D,EAAgBkd,EAASC,KAIrCP,EACAP,MChOEiB,GA5BD,WACV,IAAMlU,EAAU9F,KACVia,EAAW,8NACjB,OACI,kBAAC,WAAD,KACI,4BAAQ/T,UAAWJ,EAAQvB,QACvB,kBAACmR,GAAA,EAAD,KACI,kBAAC1P,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC3B,kBAACL,GAAA,EAAD,CAAMC,WAAS,EAACU,MAAO,CAACxF,QAAQ,SAC5B,kBAAC6E,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGM,MAAO,CAACxF,QAAQ,SAC7C,0CACA,kBAAC8P,GAAA,EAAD,CAAYtK,MAAO,CAACmC,UAAU,WAAY1I,MAAM,aAAa6Z,IAEjE,kBAACjU,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGM,MAAO,CAACxF,QAAQ,SAC7C,sCACA,kBAAC8P,GAAA,EAAD,CAAYtK,MAAO,CAACmC,UAAU,WAAY1I,MAAM,aAAa6Z,IAEjE,kBAACjU,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGM,MAAO,CAACxF,QAAQ,SAC7C,sCACA,kBAAC8P,GAAA,EAAD,CAAYtK,MAAO,CAACmC,UAAU,WAAY1I,MAAM,aAAa6Z,U,iFCXvF9I,GAAYlR,cAAW,SAACC,GAAD,MAAY,CACrCga,SAAS,CACLpZ,QAAQ,SACRuB,WAAW,SACX8X,cAAc,SACdlY,MAAM,QAEVa,KAAM,CACFC,SAAU,KAEdC,MAAO,CACHb,OAAQ,EACRc,WAAY,UAEhBC,OAAQ,CACJC,UAAW,eACXnB,WAAY,OACZD,WAAY7B,EAAMwC,YAAYC,OAAO,YAAa,CAC9CS,SAAUlD,EAAMwC,YAAYU,SAASC,YAG7CC,WAAY,CACRH,UAAW,kBAEfI,OAAQ,CACJ7B,gBAAiB8B,KAAI,UA2Dd4W,GAvDG,SAACra,GACf,IAAM+F,EAAUqL,KAgBhB,OAFA5G,QAAQC,IAAIzK,EAAM1C,OAId0C,EAAM1C,MAAMoB,KAAI,SAACT,EAAKqK,GAClB,IACIgS,EADI,UAAMrc,EAAKoP,aACKkN,MAAM,EAAE,IAChC,OACI,kBAACvJ,GAAA,EAAD,CAAM7K,UAAWJ,EAAQhD,KAAM4D,IAAK2B,GAChC,kBAACkS,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACItU,UAAWJ,EAAQ9C,MACnBzF,MAAOS,EAAKuN,OAAO,GAAGoE,IACtB9O,MAAM,0BAEV,kBAACmQ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAYC,cAAY,EAACpK,QAAQ,KAAKnH,UAAU,MAC3C3B,EAAKmP,UAEV,kBAAC8D,GAAA,EAAD,CAAYnK,QAAQ,QAAQ1G,MAAM,gBAAgBT,UAAU,KACvD0a,EADL,OAGA,kBAACpJ,GAAA,EAAD,CAAYC,cAAY,EAACpK,QAAQ,KAAKnH,UAAU,MAAhD,MACQ3B,EAAKqP,SAIrB,kBAAC0F,GAAA,EAAD,CAAa0H,gBAAc,GACvB,kBAACnG,GAAA,EAAD,CAAYC,aAAW,oBACnB,kBAAC,KAAD,OAEJ,kBAACD,GAAA,EAAD,CAAYC,aAAW,SACnB,kBAAC,KAAD,aCxCbmG,GAzCK,SAAC3a,GACjB,IAAM+F,EAAUrB,KACVsB,EAAW/F,KACb3C,EAAQ0C,EAAMzC,KACZqd,EACF,kBAAC3U,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAWJ,EAAQhD,KAAMlC,QAAS,GAC9C,kBAACoF,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC3B,kBAACL,GAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGH,UAAU,YACvC,kBAACI,GAAA,EAAD,CAAOJ,UAAWH,EAAS9E,MAAOsF,UAAW,GACzC,yBAAKL,UAAU,WACX,2CAKZ,kBAACF,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAACC,GAAA,EAAD,CAAOJ,UAAWH,EAAS9E,MAAOsF,UAAW,GACzC,yBAAKL,UAAU,YACX,kBAAC,GAAD,CACI7I,MAAOA,UAYvC,OACI,kBAAC,WAAD,KACI,yBAAKsJ,MAAO,CAACvC,UAAU,KAAM8B,UAAU,UAClCyU,KCrBFC,GAjBA,SAAC7a,GACZ,OACI,kBAACuG,GAAA,EAAD,CAAOJ,UAAWnG,EAAM+F,QAAQ7B,iBAAkBsC,UAAW,GACzD,kBAACmP,GAAA,EAAD,KACI,kBAAC1P,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC3B,kBAACL,GAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,GAAA,EAAD,CAAMhI,MAAI,EAACmI,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGM,MAAO,CAACxF,QAAQ,SAC7C,wBAAI+E,UAAWnG,EAAM+F,QAAQ3F,WAA7B,2BACA,uBAAG+F,UAAWnG,EAAM+F,QAAQ3F,WAA5B,0CCoDbV,gBARS,SAAAtB,GAAK,MAAK,CAC9BzB,gBAAiByB,EAAMG,KAAK5B,gBAC5B4B,KAAMH,EAAMG,KACZhB,KAAKa,EAAMb,KACXR,QAASqB,EAAMrB,QACfH,QAASwB,EAAMrB,QAAQH,WAKvB,CACIsZ,qBACA4E,YvBrCmB,yDAAK,WAAM3f,GAAN,eAAAc,EAAA,+EAENL,IAAMO,IAAI,iBAFJ,OAElBC,EAFkB,OAIxBjB,EAAS,CACLI,KlBDc,akBEdC,QAASY,EAAIC,OANO,gDASxBlB,EAAS,CACLI,KlBLe,ckBMfC,QAAS,CAACR,IAAK,KAAIqM,SAASC,WAAYC,OAAQ,KAAIF,SAASE,UAXzC,yDAAL,uDuBsCnBwT,UCwBiB,yDAAM,WAAM5f,GAAN,eAAAc,EAAA,+EAGLL,IAAMO,IAAI,iBAHL,OAGjBC,EAHiB,OAKvBjB,EAAS,CACLI,K1CtEc,a0CuEdC,QAASY,EAAIC,OAPM,gDAUvBlB,EAAS,CACLI,K1C9Ee,c0C+EfC,QAAS,CAAER,IAAK,KAAIqM,SAASC,WAAYC,OAAQ,KAAIF,SAASE,UAZ3C,yDAAN,wDD7BV7H,EAjDF,SAAC,GAST,IARDnB,EAQA,EARAA,KACAwc,EAOA,EAPAA,UACAD,EAMA,EANAA,YACA5E,EAKA,EALAA,kBACO5Y,EAIP,EAJAC,KAAOD,MACPP,EAGA,EAHAA,QACAW,EAEA,EAFAA,MACAd,EACA,EADAA,QAEJkR,qBAAU,WACNiN,IACAD,IACA5E,MACF,CAACA,EAAkB4E,EAAYC,IAE7B,IAAM/U,EAAWtB,KACXqB,EAAU9F,KAEhB,OAAQ1B,GAAQA,EAAK3B,SAAWA,EAAU,kBAACma,GAAD,MACtC,kBAAC,WAAD,KACI,kBAAC,GAAD,MACA,0BAAM5Q,UAAWH,EAASJ,SACtB,kBAAC,GAAD,CAAQG,QAASA,IACjB,kBAAC4P,GAAA,EAAD,KACI,kBAAC,GAAD,CAAapY,KAAMD,EAAOP,QAASA,EAASW,MAAOA,MAI3D,kBAAC,GAAD,UEnCRxB,aAAaP,OACfD,EAAaQ,aAAaP,OAE5B,IAmBeqf,GAnBH,WAIV,OAHAlN,qBAAU,WACRzO,EAAMlE,SAASa,OACd,IAGD,kBAAC,IAAD,CAAUqD,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuY,OAAK,EAACC,KAAK,IAAIjY,UAAWqb,KACjC,kBAAC,IAAD,CAAOrD,OAAK,EAAChY,UAAW+X,UCpBpCuD,IAASnb,OAAO,kBAAC,GAAD,MAASob,SAASC,eAAe,W","file":"static/js/main.9b9a1737.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SpinnerInterwind.f5e47c09.gif\";","import uuid from \"uuid\";\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\";\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n  const id = uuid.v4();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id }\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","export const SET_ALERT = \"SET_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\nexport const ACCOUNT_DELETED = \"ACCOUNT_DELETED\";\nexport const GET_PROFILES = \"GET_PROFILES\";\nexport const GET_REPOS = \"GET_REPOS\";\nexport const GET_POSTS = \"GET_POSTS\";\nexport const POST_ERROR = \"POST_ERROR\";\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const ADD_POST = \"ADD_POST\";\nexport const GET_POST = \"GET_POST\";\nexport const REMOVE_COMMENT = \"REMOVE_COMMENT\";\nexport const ADD_COMMENT = \"ADD_COMMENT\";\n\n//VILLA\nexport const GET_VILLA = 'GET_VILLA';\nexport const VILLA_ERROR = 'VILLA_ERROR';\nexport const UPDATE_VILLA = 'UPDATE_VILLA';\nexport const CLEAR_VILLA = 'CLEAR_VILLA';\nexport const GET_VILLAS = 'GET_VILLAS';\nexport const GET_VILLA_KAMAR = 'GET_VILLA_KAMAR';\nexport const GET_LIKES = 'GET_LIKES';\nexport const GET_LIKES_ERROR = 'GET_LIKES_ERROR';\n\n//KAMAR\nexport const GET_KAMARS = 'GET_KAMARS';\nexport const KAMAR_ERROR = 'KAMAR_ERROR';\nexport const UPDATE_WISHLIST = 'UPDATE_WISHLIST';\nexport const DELETE_KAMAR = 'DELETE_KAMAR';\nexport const ADD_KAMAR = 'ADD_KAMAR';\nexport const GET_KAMAR = 'GET_KAMAR';\n\n//UPLOAD\nexport const IMAGE_UPLOAD = 'IMAGE_UPLOAD';\nexport const ERROR_UPLOAD = 'ERROR_UPLOAD';\n\n//COVID\nexport const GET_COVID = \"GET_COVID\";\nexport const COVID_ERROR = \"COVID_ERROR\";\n\n\n//Admin ========================================\nexport const GET_ADMIN = \"GET_ADMIN\";\nexport const GET_ALL_USERS = \"GET_ALL_USERS\";\nexport const GET_ALL_ROOMS = \"GET_ALL_ROOMS\";\nexport const CLEAR_ROOM = \"CLEAR_ROOM\";\nexport const GET_ALL_BY_VILLAS = \"GET_ALL_BY_VILLAS\";\nexport const GET_ALL_BY_CUSTOMERS = \"GET_ALL_BY_CUSTOMERS\";\nexport const GET_ALL_POSTS = \"GET_ALL_POSTS\";\n//Error\nexport const ERROR_GET_ALL_USERS = \"ERROR_GET_ALL_USERS\";\nexport const ERROR_GET_ALL_CUSTOMERS = \"ERROR_GET_ALL_CUSTOMERS\";\nexport const ERROR_GET_ALL_VILLAS = \"ERROR_GET_ALL_VILLAS\";\nexport const ERROR_GET_ALL_ROOMS = \"ERROR_GET_ALL_ROOMS\";\n\n//Clear\nexport const CLEAR_ADMIN = \"CLEAR_ADMIN\";\n//delete\nexport const DELETE_VILLA_BY_ID = \"DELETE_VILLA_BY_ID\";\nexport const DELETE_CUSTOMER_BY_ID = \"DELETE_CUSTOMER_BY_ID\";\nexport const DELETE_ROOM_BY_ID = \"DELETE_ROOM_BY_ID\";\nexport const DELETE_POST_BY_ID = \"DELETE_POST_BY_ID\";\n//==============================================\n\n\n\n//Users\nexport const GET_CARTS = \"GET_CARTS\";\nexport const ADD_CART = \"ADD_CART\";\nexport const DELETE_ITEM_CART = \"DELETE_ITEM_CART\";\nexport const COUNT_CART = \"COUNT_CART\";\nexport const CARTS_ERROR = \"CARTS_ERROR\";\nexport const GET_CART_ITEM = \"GET_CART_ITEM\";\n\n\n\n\nexport const SUCCESS_CREATE_QUESTION = \"SUCCESS_CREATE_QUESTION\";\nexport const GET_QUESTION = \"CREATE_QUESTION\";\nexport const GET_ALL_QUESTION = \"GET_ALL_QUESTION\";\nexport const DELETE_QUESTION = \"DELETE_QUESTION\";\nexport const DELETE_ALL_QUESTION = \"DELETE_ALL_QUESTION\";\nexport const ERROR_CREATE_QUESTION = \"ERROR_CREATE_QUESTION\";\nexport const ERROR_GET_QUESTION = \"ERROR_CREATE_QUESTION\";\nexport const LOCATION = \"LOCATION\";\n","import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  CLEAR_VILLA, CLEAR_ADMIN, CLEAR_PROFILE\n} from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport {Redirect} from \"react-router\";\nimport React from \"react\";\n\n//Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"/api/auth\");\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n//Registers the user\nexport const register = ({ fullname, email, password}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({ fullname, email, password, role:'customer'});\n\n  try {\n    const res = await axios.post(\"/api/auth/register\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"error\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n//Login the user\nexport const login = ({email, password,isChecked,dashboard}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n\n  };\n  const body = JSON.stringify({ email, password });\n  try {\n    const res = await axios.post(\"/api/auth/login\", body, config);\n    if(isChecked){\n      localStorage.setItem('RememberMe', JSON.stringify({email,password,isChecked}))\n    }\n    dispatch(\n        {\n          type: LOGIN_SUCCESS,\n          payload: res.data,\n        }\n    );\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error =>\n        dispatch(setAlert(error.msg , \"error\"))\n      );\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n//Logout user and clear the profile\nexport const logout = ({history}) => dispatch => {\n  dispatch({ type: CLEAR_VILLA });\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n  dispatch({ type: CLEAR_ADMIN });\n  return <Redirect to={'/login'}/>\n};\n","//function that takes in a piece of state and action.\nimport { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n    LOCATION,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: true,\n  location:null,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        location:payload,\n        user: payload\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        location:null,\n        user:null\n      };\n    case LOGIN_SUCCESS:\n    case LOCATION:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n  GET_PROFILES,\n  GET_REPOS\n} from \"../actions/types\";\n\n//Create initial state\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false\n      };\n\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false\n      };\n\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from \"../actions/types\";\n\nconst initalState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initalState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            comment => comment._id !== payload\n          )\n        },\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import {\r\n    GET_KAMAR,\r\n    KAMAR_ERROR,\r\n    UPDATE_WISHLIST,\r\n    DELETE_KAMAR,\r\n    ADD_KAMAR,\r\n    ERROR_UPLOAD, IMAGE_UPLOAD,\r\n    GET_KAMARS, CLEAR_ROOM\r\n} from \"../actions/types\";\r\n\r\nconst initalState = {\r\n    rooms: [],\r\n    room: null,\r\n    image:null,\r\n    loading: true,\r\n    success: false,\r\n    error: {}\r\n};\r\n\r\nexport default function(state = initalState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_KAMARS:\r\n            return {\r\n                ...state,\r\n                rooms: payload,\r\n                loading: false\r\n            };\r\n        case GET_KAMAR:\r\n            return {\r\n                ...state,\r\n                room: payload,\r\n                loading: false\r\n            };\r\n        case KAMAR_ERROR:\r\n        case ERROR_UPLOAD:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case UPDATE_WISHLIST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post =>\r\n                    post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n                ),\r\n                loading: false\r\n            };\r\n        case DELETE_KAMAR:\r\n            return {\r\n                ...state,\r\n                rooms: state.rooms.filter(room => room._id !== payload),\r\n                loading: false\r\n            };\r\n        case ADD_KAMAR:\r\n            return {\r\n                ...state,\r\n                room: payload,\r\n                loading: false\r\n            };\r\n        case IMAGE_UPLOAD:\r\n            return{\r\n                ...state,\r\n                room: state.room.map(img=>\r\n                    img[0]\r\n                ),\r\n                loading: false\r\n            }\r\n        case CLEAR_ROOM:\r\n            return {\r\n                ...state,\r\n                room: null,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_VILLA,\r\n    VILLA_ERROR,\r\n    CLEAR_VILLA,\r\n    UPDATE_VILLA,\r\n    GET_VILLAS,\r\n    GET_LIKES,\r\n    GET_VILLA_KAMAR\r\n} from \"../actions/types\";\r\n\r\n//Create initial state\r\nconst initialState = {\r\n    villa: null,\r\n    likes: null,\r\n    villas: [],\r\n    loading: true,\r\n    error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_VILLA:\r\n        case UPDATE_VILLA:\r\n            return {\r\n                ...state,\r\n                villa: payload,\r\n                loading: false\r\n            };\r\n        case GET_LIKES:\r\n            return{\r\n                ...state,\r\n                likes:payload,\r\n                loading:false\r\n            }\r\n        case GET_VILLAS:\r\n            return {\r\n                ...state,\r\n                villas: payload,\r\n                loading: false\r\n            };\r\n\r\n        case VILLA_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case CLEAR_VILLA:\r\n            return {\r\n                ...state,\r\n                villa: null,\r\n                loading: false\r\n            };\r\n\r\n        case GET_VILLA_KAMAR:\r\n            return {\r\n                ...state,\r\n                kamar: payload,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_ROOMS,\r\n    GET_ALL_BY_VILLAS,\r\n    GET_ALL_BY_CUSTOMERS,\r\n    CLEAR_ADMIN\r\n} from \"../actions/types\";\r\n\r\n//Create initial state\r\nconst initialState = {\r\n    villas: [],\r\n    villa: null,\r\n    rooms: [],\r\n    room: null,\r\n    customers: [],\r\n    customer: null,\r\n    users:[],\r\n    loading: true,\r\n    error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_ALL_BY_VILLAS:\r\n            return {\r\n                ...state,\r\n                villas: payload,\r\n                loading: false\r\n            };\r\n        case GET_ALL_USERS:\r\n            return{\r\n                ...state,\r\n                users: payload,\r\n                loading: false\r\n            }\r\n        case GET_ALL_BY_CUSTOMERS:\r\n            return {\r\n                ...state,\r\n                customers: payload,\r\n                loading: false\r\n            };\r\n        case GET_ALL_ROOMS:\r\n            return {\r\n                ...state,\r\n                rooms: payload,\r\n                loading: false\r\n            }\r\n        case CLEAR_ADMIN:\r\n            return {\r\n                ...state,\r\n                villas:null,\r\n                villa: null,\r\n                room: null,\r\n                customer: null,\r\n                users:null,\r\n                customers:null,\r\n                rooms:null,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_CARTS,\r\n    GET_CART_ITEM,COUNT_CART,\r\n    ADD_CART\r\n} from \"../actions/types\";\r\n\r\n//Create initial state\r\nconst initialState = {\r\n    carts: [],\r\n    item: null,\r\n    loading: true,\r\n    error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case ADD_CART:\r\n            return {\r\n                ...state,\r\n                item: payload,\r\n                loading:false\r\n            }\r\n        case GET_CARTS:\r\n            return {\r\n                ...state,\r\n                carts: payload,\r\n                loading: false\r\n            };\r\n        case COUNT_CART:\r\n            return {\r\n                ...state,\r\n                count: payload,\r\n                loading: false\r\n            };\r\n        case GET_CART_ITEM:\r\n            return{\r\n                ...state,\r\n                item: payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\nimport alert from \"./alert\";\nimport auth from \"./auth\";\nimport profile from \"./profile\";\nimport post from \"./post\";\nimport room from \"./room\";\nimport villa from \"./villa\";\nimport admin from \"./admin\";\nimport cart from './cart';\n\nexport default combineReducers({\n    alert,\n    auth,\n    profile,\n    post,\n    cart,\n    villa,\n    room,\n    admin\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({\r\n                          component: Component,\r\n                          auth: { isAuthenticated, loading,user},\r\n                          match,\r\n                          ...rest\r\n                      }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            !isAuthenticated && !loading ? (\r\n                <Redirect to='/' />\r\n            ) : (\r\n                user ? <Component {...props} /> :<>Loading...</>\r\n\r\n            )\r\n        }\r\n    />\r\n);\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {fade} from \"@material-ui/core\";\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\r\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    textColor:{\r\n        color:`#fff`\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    paper: {\r\n        background:\"transparent\",\r\n        padding:\"10px\",\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.20),\r\n        minWidth:'70%',\r\n        transition: '0.2s',\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.50),\r\n            transition: '0.5s'\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        marginLeft:\"50px\",\r\n        width: '80%',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        minWidth: '70%',\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            minWidth: '70%',\r\n            width: '100%',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    //Card Style\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    'direction-xs-row-reverse': {\r\n        flexDirection: 'row-reverse',\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n    orange: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    },\r\n    purple: {\r\n        color: theme.palette.getContrastText(deepPurple[500]),\r\n        backgroundColor: deepPurple[500],\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    backgroundHeader:{\r\n        background: theme.palette.secondary.light,\r\n        marginTop: theme.spacing(0),\r\n        borderRadius:'0',\r\n        minHeight:'200px'\r\n    },\r\n    headerImage:{\r\n        background:theme.palette.secondary.contrastText,\r\n        padding:\"10px\",\r\n        margin:'5px',\r\n        height:\"120px\",\r\n        width:'95%',\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n\r\n    footer: {\r\n        backgroundColor: grey[900],\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default useStyle;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {fade} from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst dashStyles = makeStyles((theme) => ({\r\n    navlink:{\r\n        color:'inherit',\r\n        textDecoration:'none',\r\n        listStyle:'none',\r\n        '&:hover': {\r\n            // backgroundColor: fade(theme.palette.common.white, 0.50),\r\n            color:'secondary',\r\n            textDecoration:'none',\r\n            listStyle:'none'\r\n        },\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0.2),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        paddingTop: theme.spacing(6),\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default dashStyles;","import React, {Fragment} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport dashStyles from \"../../../../../assets/style/dashStyles\";\r\nimport useStyle from \"../../../../../assets/style/useStyle\";\r\n\r\nconst DashboardDisplayAdmin = ()=>{\r\n    const classes = dashStyles();\r\n    const classess = useStyle();\r\n\r\n    return(\r\n        <Fragment>\r\n            <Grid container className={classes.root} spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Grid container >\r\n                        <Grid item xs={12} lg={4} md={6}>\r\n                            <Paper className={classess.paper} elevation={0}>\r\n                                <h1>Total User</h1>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={4} md={6}>\r\n                            <Paper className={classess.paper} elevation={0}>\r\n                                <h1>Materi</h1>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={4} md={6}>\r\n                            <Paper className={classess.paper} elevation={0}>\r\n                                <h1>Materi</h1>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Paper elevation={0}>\r\n                        <Grid item >\r\n                            <Paper className={classess.paper} elevation={0}>\r\n                                <h1>Materi</h1>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid item xs={12} lg={6} md={6}>\r\n                        <Paper elevation={0}>\r\n                            <Grid item >\r\n                                <Paper className={classess.paper} elevation={0}>\r\n                                    <h1>Materi</h1>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item  xs={12} lg={6} md={6}>\r\n                        <Paper elevation={0} >\r\n                            <Grid item >\r\n                                <Paper className={classess.paper} elevation={0}>\r\n                                    <h1>Materi</h1>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default DashboardDisplayAdmin;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n\r\nconst Alerts = ({ alerts }) =>\r\n    alerts !== null &&\r\n    alerts.length > 0 &&\r\n    alerts.map(alert => (\r\n        <div key={alert.id} style={{marginBottom:'20px',}}>\r\n            <small><Alert  variant='filled' severity={alert.alertType}>{alert.msg}</Alert></small>\r\n        </div>\r\n\r\n    ));\r\n\r\nAlerts.propTypes = {\r\n    alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alerts);\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n    ADD_KAMAR,\r\n    KAMAR_ERROR,\r\n    GET_KAMARS,\r\n    UPDATE_WISHLIST,\r\n    DELETE_KAMAR,\r\n    GET_KAMAR, IMAGE_UPLOAD, CLEAR_ROOM,\r\n} from \"./types\";\r\n\r\n\r\n//Get Rooms\r\nexport const getCurrentRooms = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get(\"/api/room/villa/me\");\r\n\r\n        dispatch({\r\n            type: GET_KAMARS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: KAMAR_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n//Get All Room\r\n//No Auth\r\n//Public\r\nexport const getAllRooms = ()=> async dispatch =>{\r\n    try{\r\n        const res = await axios.get(\"/api/v1/rooms\");\r\n\r\n        dispatch({\r\n            type: GET_KAMARS,\r\n            payload: res.data\r\n        });\r\n    }catch(err){\r\n        dispatch({\r\n            type: KAMAR_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n//Get Rooms\r\nexport const getRoomByUser = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(\"/api/room/villa/:id\");\r\n\r\n        dispatch({\r\n            type: GET_KAMARS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: KAMAR_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n//Add a like to a discussion\r\nexport const addWishlist = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/rooms/wishlist/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_WISHLIST,\r\n            payload: { id, likes: res.data }\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: KAMAR_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n//Remove a like to a discussion\r\nexport const removeWishlist = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/rooms/unwishlist/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_WISHLIST,\r\n            payload: { id, likes: res.data }\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: KAMAR_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n//Delete a post\r\n\r\nexport const deleteRoom = (id) => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/room/${id}`);\r\n\r\n        dispatch({\r\n            type: DELETE_KAMAR,\r\n            payload: id\r\n        });\r\n        dispatch(setAlert(\"Post has been deleted.\", \"success\"));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: KAMAR_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n//Add Room for the User\r\n//Add a post\r\n//DONE\r\nexport const addRoom = ({formData, idR}) => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/v1/rooms/${idR}`, formData, {\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        });\r\n\r\n        dispatch({\r\n            type: ADD_KAMAR,\r\n            payload: res.data\r\n        });\r\n        // dispatch({\r\n        //     type: GET_KAMAR,\r\n        //     payload: res.data,\r\n        //\r\n        // });\r\n        dispatch(setAlert(\"Room Added\", \"success\"));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: KAMAR_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n//Add Room for the User\r\n//Add a post\r\nexport const addImage = (formData) => async dispatch => {\r\n\r\n};\r\n//Get Room\r\nexport const getRoom = id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/rooms/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_KAMAR,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: KAMAR_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const clearRoom = ()=> async dispatch =>{\r\n    try{\r\n        dispatch({type: CLEAR_ROOM});\r\n    }catch (e) {\r\n        dispatch({type: CLEAR_ROOM});\r\n    }\r\n}","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {fade} from \"@material-ui/core\";\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\r\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nconst fileUpload = makeStyles((theme) => ({\r\n    drop:{\r\n        width:250,\r\n        minHeight:'250px',\r\n        border:'1px solid lightgray',\r\n        display:'flex',\r\n        cursor:'pointer',\r\n        alignItems:'center',\r\n        borderRadius:'10px',\r\n        justifyContent:'center'\r\n    },\r\n    thumbsContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n    },\r\n    thumb:{\r\n        display: 'inline-flex',\r\n        borderRadius: 20,\r\n        border: '1px solid #eaeaea',\r\n        marginBottom: 8,\r\n        marginRight: 8,\r\n        width: 250,\r\n        height: 250,\r\n        padding: 4,\r\n        boxSizing: 'border-box'\r\n\r\n    },\r\n    thumbInner:{\r\n        display: 'flex',\r\n        minWidth: 0,\r\n        overflow: 'hidden'\r\n    },\r\n    img:{\r\n        borderRadius: 20,\r\n        objectFit:'fill',\r\n        width: 240,\r\n        height: 240,\r\n\r\n    }\r\n}));\r\n\r\nexport default fileUpload;","import React from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Alerts from \"../../../Alert/Alerts\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {addRoom} from \"../../../../actions/room\";\r\nimport {setAlert} from \"../../../../actions/alert\";\r\nimport fileUpload from \"../../../../assets/style/fileUpload\";\r\nconst FileUpload =(props)=>{\r\n    const classes = fileUpload();\r\n\r\n\r\n\r\n    const thumbs = props.getFiles.map((file,index) => (\r\n        <div className={classes.thumb} key={index}>\r\n            <div className={classes.thumbInner}>\r\n                <img\r\n                    alt={file.size}\r\n                    src={file.preview}\r\n                    className={classes.img}\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    return(\r\n        <Grid item xs={12} md={12} lg={12}>\r\n            <Grid container>\r\n                {props.getFiles.length > 0 ?\r\n                    <Grid item xs={12} md={3} lg={3}>\r\n                        <aside className={classes.thumbsContainer}>\r\n                            {thumbs}\r\n                        </aside>\r\n                    </Grid>\r\n                :null}\r\n                {props.getFiles.length > 0 ? null :\r\n                    <Grid item xs={12} md={6} lg={6}>\r\n                        <Alerts/>\r\n                        <div {...props.getRoot} className={classes.drop}>\r\n                            <input {...props.getInput}/>\r\n                            <AddIcon/> Drag & Drop\r\n                        </div>\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\nFileUpload.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    addRoom: PropTypes.func.isRequired,\r\n    setAlert: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    room: state.room,\r\n    alerts:state.alert\r\n});\r\nexport default connect(mapStateToProps,{addRoom,setAlert})(FileUpload);","import React, {Fragment, useEffect, useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FileUpload from \"../../upload/FileUpload\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {setAlert} from \"../../../../../actions/alert\";\r\nimport axios from 'axios'\r\nimport {useDropzone} from \"react-dropzone\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {addRoom} from \"../../../../../actions/room\";\r\nimport Alerts from \"../../../../Alert/Alerts\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        paddingTop: theme.spacing(6),\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n    background:{\r\n        background: theme.palette.secondary.light,\r\n        marginTop: theme.spacing(0),\r\n        borderRadius:'0',\r\n        minHeight:'100px'\r\n    },\r\n    textStyle:{\r\n        color: \"#fff\",\r\n        fontSize: 30,\r\n        textAlign:\"center\",\r\n        justifyContent:\"center\"\r\n    },\r\n    textField:{\r\n        width:\"100%\",\r\n        marginTop:10\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}))\r\nconst limitRoom =[\r\n    {key:'0', value:'0'},\r\n    {key:'1', value:'1'},\r\n    {key:'2', value:'2'},\r\n    {key:'3', value:'3'},\r\n    {key:'4', value:'4'},\r\n    {key:'5', value:'5'},\r\n    {key:'6', value:'6'},\r\n];\r\nconst RoomType = [\r\n    {key:'0', value:'Room Type'},\r\n    {key:'Standar', value:'Standar'},\r\n    {key:'Deluxe', value:'Deluxe'},\r\n    {key:'Super Deluxe', value:'Super Deluxe'},\r\n    {key:'Presidential', value:'Presidential'},\r\n    {key:'Other', value:'Other'}\r\n];\r\nconst cekbok = [\r\n    {key:'Tidak', value:'Tidak'},\r\n    {key:'Ya', value:'Ya'}\r\n];\r\nconst typeBed = [\r\n    {key:'Single', value:'Single'},\r\n    {key:'Double', value:'Double'}\r\n];\r\n\r\nconst RoomForms = ({setAlert,addRoom,history,profile:{profile}})=>{\r\n    const [files, setFiles] = useState([]);\r\n    const [uploadFile,setUploadFile] = useState({});\r\n    const fileMaxSize = 10000000 //bytes\r\n    const acceptedFileType = 'image/x-png, image/png, image/jpg, image/jpeg'\r\n    const [uploadPercentage, setUploadPercentage] =useState(0);\r\n    const {getRootProps, getInputProps} = useDropzone({\r\n        accept: acceptedFileType,\r\n        maxSize:fileMaxSize,\r\n        onDrop: async acceptedFiles => {\r\n            acceptedFiles.forEach((file) => {\r\n                const reader = new FileReader()\r\n                reader.onabort = () => console.log('file reading was aborted')\r\n                reader.onload = async(e) => {\r\n                    e.preventDefault()\r\n                    const binaryStr = reader.result\r\n                    const formData = new FormData()\r\n                    formData.append('image',file)\r\n                    try{\r\n                        const ress = await axios.post('/api/v1/rooms/upload', formData, {headers:{'Content-Type':'multipart/form-data'},\r\n                            onUploadProgress: progressEvent =>{\r\n                                setUploadPercentage(\r\n                                    parseInt(\r\n                                        Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n                                    )\r\n                                );\r\n                                //Clear percen\r\n                                setTimeout(()=>setUploadPercentage(0),3000)\r\n                            }})\r\n                        const {_id,images} = ress.data\r\n                        console.log(images)\r\n                        setUploadFile({images,_id})\r\n\r\n                    }catch(err){\r\n                        if(err.response.status === 500){\r\n                            console.log('There was a problem with server')\r\n                        }else{\r\n                            console.log(err.response.data.msg)\r\n                        }\r\n                    }\r\n                }\r\n                reader.readAsArrayBuffer(file)\r\n            })\r\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n                preview: URL.createObjectURL(file)\r\n            })));\r\n        }\r\n    });\r\n    const [roomNameValue, setRoomNameValue] =useState('');\r\n    const [descriptionValue, setDescriptionValue] =useState('');\r\n    const [acValue, setAcValue] =useState('');\r\n    const [tvValue, settvValue] =useState('');\r\n    const [bedtypeValue, setbedtypeValue] =useState('');\r\n    const [wifiValue, setwifiValue] =useState('');\r\n    const [otherValue, setotherValue] =useState('');\r\n    const [hargaValue, sethargaValue] =useState('');\r\n    const [limitValue, setLimitValue] =useState('');\r\n    const [tipeKamarValue, setTipeKamarValue] =useState('');\r\n    const onAcChange = e =>{setAcValue(e.target.value)}\r\n    const onTvChange = e =>{settvValue(e.target.value)}\r\n    const onBedTypeChange = e =>{setbedtypeValue(e.target.value)}\r\n    const onWifiChange = e =>{setwifiValue(e.target.value)}\r\n    const onOtherChange = e =>{setotherValue(e.target.value)}\r\n    const onRoomNameChange = e =>{setRoomNameValue(e.target.value)}\r\n    const onHargaChange = e =>{sethargaValue(e.target.value)}\r\n    const onDescriptionChange = e =>{setDescriptionValue(e.target.value)}\r\n    const onLimitChange = e =>{setLimitValue(e.target.value)}\r\n    const onTipeKamarChange = e =>{setTipeKamarValue(e.target.value)}\r\n    const onSubmit =async (e)=>{\r\n        e.preventDefault()\r\n        const idR = uploadFile._id\r\n        const formData ={\r\n            roomName: roomNameValue,\r\n            description: descriptionValue,\r\n            harga: hargaValue,\r\n            limit: limitValue,\r\n            tipeKamar: tipeKamarValue,\r\n            ac: acValue,\r\n            tv: tvValue,\r\n            bedtype: bedtypeValue,\r\n            wifi: wifiValue,\r\n            other: otherValue\r\n        }\r\n\r\n        addRoom({formData, idR, history});\r\n    }\r\n    useEffect(() => () => {\r\n        // Make sure to revoke the data uris to avoid memory leaks\r\n        files.forEach(file => URL.revokeObjectURL(file.preview));\r\n    }, [files]);\r\n    console.log(uploadFile.images)\r\n    const handleUnClick =(e)=>{\r\n        e.preventDefault()\r\n        if (profile !== null){\r\n            if (uploadFile.images.length > 0){\r\n                if (window.performance){\r\n                    if (profile.roomName === 'null' && performance.navigation.type === 1){\r\n                        alert('diisi sampai tuntas bos')\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const classes = useStyle()\r\n    return(\r\n        <Grid item xs={12} lg={6} md={6}>\r\n            <Alerts/>\r\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={(e)=>onSubmit(e)} onChange={handleUnClick}>\r\n                <FileUpload\r\n                    getRoot={getRootProps()}\r\n                    getInput={getInputProps()}\r\n                    getFiles={files}\r\n                />\r\n                    <LinearProgress\r\n                        variant=\"determinate\"\r\n                        style={{\r\n                            height: 20,\r\n                            marginTop: 10,\r\n                            borderRadius: 5,\r\n                        }}\r\n                        value={uploadPercentage}\r\n                        size={40}\r\n                        thickness={4}\r\n                    />\r\n                {files.length === 0 ?null:\r\n                <Grid item xs={12} md={12} lg={12}>\r\n                    <TextField\r\n                        className={classes.textField}\r\n                        id=\"standard-basic\"\r\n                        label='Room Name'\r\n                        variant=\"outlined\"\r\n                        name='roomName'\r\n                        value={roomNameValue}\r\n                        onChange={onRoomNameChange}\r\n                    />\r\n                    <TextField\r\n                        className={classes.textField}\r\n                        id=\"standard-basic\"\r\n                        label=\"Description\"\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={3}\r\n                        rowsMax={5}\r\n                        name=\"description\"\r\n                        value={descriptionValue}\r\n                        onChange={onDescriptionChange}\r\n                    />\r\n                    <small className=\"form-text\">Limit Room<span style={{color:'red'}}>*</span></small>\r\n                    <select onChange={onLimitChange} name='limit' className='form-control' value={limitValue}>\r\n                        {limitRoom.map(item=>(\r\n                            <option key={item.key} value={item.key}>{item.value}</option>\r\n                        ))}\r\n                    </select>\r\n                    <small className=\"form-text\">Room Type<span style={{color:'red'}}>*</span></small>\r\n                    <select className='form-control' name='tipeKamar' onChange={onTipeKamarChange} value={tipeKamarValue}>\r\n                        {RoomType.map(item=>(\r\n                            <option key={item.key} value={item.key}>{item.value}</option>\r\n                        ))}\r\n                    </select>\r\n                    <TextField\r\n                        className={classes.textField}\r\n                        id=\"standard-basic\"\r\n                        label=\"Harga\"\r\n                        type=\"number\"\r\n                        variant=\"outlined\"\r\n                        name='harga'\r\n                        value={hargaValue}\r\n\r\n                        onChange={onHargaChange}\r\n                    />\r\n                    <Fragment>\r\n                        <FormControl className={classes.textField}>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">AC</InputLabel>\r\n                                <Select\r\n                                    native\r\n                                    name='ac'\r\n                                    onChange={onAcChange}\r\n                                    value={acValue}\r\n                                    label=\"AC\"\r\n                                    inputProps={{\r\n                                        name: 'ac',\r\n                                        id: 'outlined-age-native-simple',\r\n                                    }}\r\n                                >\r\n                                    {cekbok.map(item=>(\r\n                                        <option key={item.key} value={item.key}>{item.value}</option>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                        </FormControl>\r\n                        <FormControl className={classes.textField}>\r\n                            <small className=\"form-text\">Tv<span style={{color:'red'}}>*</span></small>\r\n                            <select className='form-control' name='tv' onChange={onTvChange} value={tvValue}>\r\n                                {cekbok.map(item=>(\r\n                                    <option key={item.key} value={item.key}>{item.value}</option>\r\n                                ))}\r\n                            </select>\r\n                        </FormControl>\r\n                        <FormControl className={classes.textField}>\r\n                            <small className=\"form-text\">Wifi<span style={{color:'red'}}>*</span></small>\r\n                            <select className='form-control' name='wifi' onChange={onWifiChange} value={wifiValue}>\r\n                                {cekbok.map(item=>(\r\n                                    <option key={item.key} value={item.key}>{item.value}</option>\r\n                                ))}\r\n                            </select>\r\n                        </FormControl>\r\n                        <FormControl className={classes.textField}>\r\n                            <small className=\"form-text\">Type Bed<span style={{color:'red'}}>*</span></small>\r\n                            <select className='form-control' name='bedtype' onChange={onBedTypeChange} value={bedtypeValue}>\r\n                                {typeBed.map(item=>(\r\n                                    <option key={item.key} value={item.key}>{item.value}</option>\r\n                                ))}\r\n                            </select>\r\n                        </FormControl>\r\n                    </Fragment>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        type='submit'\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        // onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n                    >\r\n                        Add Socials\r\n                    </Button>\r\n                </Grid>\r\n                }\r\n            </form>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nRoomForms.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    addRoom: PropTypes.func.isRequired,\r\n    setAlert: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    room: state.room,\r\n    profile: state.profile,\r\n    alerts:state.alert\r\n});\r\nexport default connect(mapStateToProps,{setAlert,addRoom})(RoomForms);","import React, {Fragment} from 'react'\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport useStyle from \"../../../../assets/style/useStyle\"\r\nimport {useParams} from \"react-router\"\r\nimport {connect} from 'react-redux'\r\nimport DashboardDisplayAdmin from \"./pages/DashboardDisplayAdmin\"\r\nimport PropTypes from \"prop-types\"\r\nimport {getQuiz} from \"../../../../actions/question\"\r\nimport {setAlert} from \"../../../../actions/alert\"\r\nimport RoomForms from \"../villa/Rooms/RoomForms\";\r\n\r\nconst MainAdmin = ({getQuiz,setAlert})=>{\r\n    const classes = useStyle();\r\n\r\n    let {url} = useParams();\r\n    const dashboardUrl =(\r\n        window.location.pathname === '/dashboard'?\r\n            <DashboardDisplayAdmin/>\r\n            :null\r\n    )\r\n\r\n    const urls = (\r\n        <div>\r\n            <Grid container className={classes.root} spacing={2}>\r\n\r\n                {/*{url === 'createSoal'? <CreateSoal/>:null}*/}\r\n                {/*{url === 'nilaiUser'? <NilaiUser/>:null}*/}\r\n                {/*{url === 'materi'? <Materi/>:null}*/}\r\n            </Grid>\r\n        </div>\r\n    )\r\n    return (\r\n        <Fragment>\r\n            {dashboardUrl}\r\n            {url === 'TambahRoom'?\r\n                <Grid item xs={12} md={6} lg={6}>\r\n                    <RoomForms/>\r\n                </Grid>\r\n                :null}\r\n        </Fragment>\r\n    )\r\n}\r\nMainAdmin.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    getQuiz: PropTypes.func.isRequired,\r\n    setAlert: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    alerts:state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps,{getQuiz,setAlert})(MainAdmin);","import {ERROR_GET_QUESTION, GET_ALL_QUESTION, SUCCESS_CREATE_QUESTION} from \"./types\";\r\n\r\nexport const getQuiz = () => async dispatch =>{\r\n    try{\r\n        const ress = JSON.parse(localStorage.getItem('state'))\r\n\r\n        dispatch({\r\n            type: GET_ALL_QUESTION,\r\n            payload: ress.data\r\n        })\r\n    }catch(err){\r\n        if(err){\r\n            console.log('error')\r\n        }\r\n        dispatch({\r\n            type: ERROR_GET_QUESTION\r\n        })\r\n    }\r\n\r\n}\r\nexport const create = (state) => async dispatch =>{\r\n    try{\r\n        const set = localStorage.setItem('state', JSON.stringify(state))\r\n\r\n        dispatch({\r\n            type:SUCCESS_CREATE_QUESTION,\r\n            payload: set.data\r\n        })\r\n        console.log(set.data)\r\n    }catch(err){\r\n\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport dashStyle from \"../../../../../assets/style/dashStyles\";\r\n\r\nconst displayStyle = makeStyles((theme)=>({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    card:{\r\n        // margin:10,\r\n        maxWidth: \"100%\",\r\n        top: '50%',\r\n        left: '50%',\r\n        borderRadius:10,\r\n        transform: 'translate(-50%, - 50%)',\r\n        backgroundSize: '200%',\r\n        border:0,\r\n        // boxShadow: ' 0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        transition: '0.5s',\r\n        color:\"white\",\r\n        backgroundImage: 'linear-gradient(45deg, #ffb74d, #ff9800, #f73378)',\r\n        '&:hover':{\r\n            backgroundPosition:'right'\r\n        }\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n        color: \"#ffffff\"\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    paper:{\r\n        background:\"white\",\r\n        padding:\"20px\",\r\n        borderRadius:\"10px\",\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    papperLeft:{\r\n        minHeight:400\r\n    },\r\n    cardProfile:{\r\n        maxWidth:\"100%\",\r\n        minHeight:400\r\n\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    cardAction:{\r\n        marginBottom:70\r\n    },\r\n    roots:{\r\n        width:'100%'\r\n    }\r\n}))\r\n\r\n\r\n\r\nconst DashboardDisplayVilla =()=>{\r\n    const classes = dashStyle();\r\n    const classStyle = displayStyle()\r\n    return(\r\n        <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={2} >\r\n                    <Grid item xs={6} lg={4} md={4}>\r\n                        <Card className={classStyle.card} variant=\"outlined\">\r\n                            <CardContent>\r\n                                <Typography className={classStyle.title} color=\"textSecondary\" gutterBottom>\r\n                                    Total Room\r\n                                </Typography>\r\n                                <Typography variant=\"h2\" component=\"h2\">\r\n                                    10\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={6} lg={4} md={4}>\r\n                        <Card className={classStyle.card} variant=\"outlined\">\r\n                            <CardContent>\r\n                                <Typography className={classStyle.title} color=\"textSecondary\" gutterBottom>\r\n                                    Total income /Month\r\n                                </Typography>\r\n                                <Typography variant=\"h2\" component=\"h2\">\r\n                                    Rp. 3.000.000\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={4} md={4}>\r\n                        <Card className={classStyle.card} variant=\"outlined\">\r\n                            <CardContent>\r\n                                <Typography className={classStyle.title} color=\"textSecondary\" gutterBottom>\r\n                                    Total income /years\r\n                                </Typography>\r\n                                <Typography variant=\"h2\" component=\"h2\">\r\n                                    Rp.32.000.000\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DashboardDisplayVilla","import React,{useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    card:{\r\n        maxWidth: \"100%\",\r\n        top: '50%',\r\n        left: '50%',\r\n        borderRadius:10,\r\n        transform: 'translate(-50%, - 50%)',\r\n        backgroundSize: '200%',\r\n        // boxShadow: ' 0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        transition: '0.5s',\r\n        backgroundImage: 'linear-gradient(45deg, #ffb74d, #ff9800, #f73378)',\r\n        '&:hover':{\r\n            backgroundPosition:'right'\r\n        }\r\n    },\r\n    cardText:{\r\n        color:\"white\"\r\n    },\r\n    buttonText:{\r\n        backgroundColor: '#ffb74d',\r\n        color:\"white\",\r\n        fontWeight:'bold'\r\n    },\r\n    form:{\r\n        padding:20,\r\n        paddingRight:40,\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginRight:15\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        backgroundColor:'white',\r\n        borderRadius:10\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(1),\r\n    }\r\n}));\r\nconst Settings = ()=>{\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n    }\r\n\r\n    const CardInfo = ()=>(\r\n        <CardContent className={classes.cardText}>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h3\" className={classes.cardText}>\r\n                <PersonIcon/>Profile\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" className={classes.cardText}>\r\n                admin@gmail.com\r\n            </Typography>\r\n            <Typography variant=\"caption\" color=\"textSecondary\" component=\"p\" className={classes.cardText}>\r\n                Jan, 7 2020\r\n            </Typography>\r\n        </CardContent>\r\n    )\r\n\r\n    const FormEdit = ()=>(\r\n        <Grid item xs={12} md={12} lg={12}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={12} lg={6}>\r\n                    <div className={classes.container}>\r\n                        <Slide direction=\"up\" in={!open} mountOnEnter unmountOnExit>\r\n                            <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                                <TextField\r\n                                    autoComplete=\"new-fullname\"\r\n                                    label=\"FullName\"\r\n                                    style={{ margin: 8 }}\r\n                                    placeholder=\"Placeholder\"\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <TextField\r\n                                    autoComplete=\"new-email\"\r\n                                    label=\"Email\"\r\n                                    style={{ margin: 8 }}\r\n                                    placeholder={'admin@gmail.com'}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <TextField\r\n                                    autoComplete=\"new-password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    style={{ margin: 8 }}\r\n                                    placeholder=\"password\"\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <TextField\r\n                                    autoComplete=\"new-password2\"\r\n                                    label=\"Retype Password\"\r\n                                    type=\"password\"\r\n                                    style={{ margin: 8 }}\r\n                                    placeholder=\"password\"\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <Button\r\n                                    style={{marginLeft: 10,marginBottom:'20px',marginRight:'10px'}}\r\n                                    variant=\"contained\"\r\n                                    type='submit'\r\n                                    color=\"primary\"\r\n                                    onClick={handleClick}\r\n                                    className={classes.button}\r\n                                    startIcon={<UpdateIcon />}\r\n                                >\r\n                                    Update\r\n                                </Button>\r\n                                <Button\r\n                                    style={{marginBottom:'20px',marginRight:'10px'}}\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    onClick={(e)=>handleChange(e)}\r\n                                    className={classes.button}\r\n                                    startIcon={<CloseIcon />}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                            </form>\r\n                        </Slide>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n    const [component, setComponent] =useState(<CardInfo/>)\r\n    const [formUpdate, setFormUpdate] =useState(<FormEdit/>)\r\n    const [open, setOpen] = useState(false)\r\n    const [openSnack, setOpenSnack] = useState(false)\r\n    const handleChange = () => {\r\n        setOpen((prev) => !prev);\r\n    };\r\n    const handleClick = () => {\r\n        setOpenSnack(true);\r\n    };\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenSnack(false);\r\n    };\r\n    return(\r\n        <Grid item xs={12} md={12} lg={12}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={4} lg={4}>\r\n                    <Card className={classes.card} elevation={0}>\r\n                        {component}\r\n                        <CardActions>\r\n                            <Button\r\n                                className={classes.buttonText}\r\n                                size=\"small\"\r\n                                color=\"secondary\"\r\n                                onClick={(e)=>{handleChange(e)}}\r\n                            >\r\n                                Edit\r\n                            </Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n                {open ?\r\n                    formUpdate\r\n                    :null}\r\n                <Snackbar open={openSnack} autoHideDuration={2000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                        Data updated!\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Settings","import React, {Fragment} from 'react'\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport useStyle from \"../../../../assets/style/useStyle\"\r\nimport {useParams} from \"react-router\"\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from \"prop-types\"\r\nimport {setAlert} from \"../../../../actions/alert\"\r\nimport RoomForms from \"../villa/Rooms/RoomForms\";\r\nimport DashboardDisplayVilla from \"./pages/DashboardDisplayVilla\";\r\nimport Settings from \"./settings/Settings\";\r\n\r\nconst MainVilla = ({setAlert})=>{\r\n    const classes = useStyle();\r\n\r\n    let {url} = useParams();\r\n    const dashboardUrl =(\r\n        window.location.pathname === '/dashboard'?\r\n            <DashboardDisplayVilla/>\r\n            :null\r\n    )\r\n\r\n    const urls = (\r\n        <div>\r\n            {url === 'Settings'? <Settings/>:null}\r\n            {/*{url === 'nilaiUser'? <NilaiUser/>:null}*/}\r\n            {/*{url === 'materi'? <Materi/>:null}*/}\r\n            {url === 'TambahRoom'?<RoomForms/>:null}\r\n        </div>\r\n    )\r\n    return (\r\n        <Fragment>\r\n            {dashboardUrl}\r\n            {urls}\r\n        </Fragment>\r\n    )\r\n}\r\nMainVilla.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    setAlert: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    alerts:state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps,{setAlert})(MainVilla);","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport MainAdmin from \"./admin/MainAdmin\";\r\nimport {Link} from \"react-router-dom\";\r\nimport MainVilla from \"./villa/MainVilla\";\r\n\r\nconst DashboardMain = ({auth:{user}})=>{\r\n\r\n    const dashStyle = makeStyles((theme) => ({\r\n        toolbar: {\r\n            display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'flex-end',\r\n                padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n                padding: theme.spacing(3),\r\n        }\r\n    }))\r\n    const classes = dashStyle();\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.toolbar}/>\r\n            {user && user.role === 'admin'? <MainAdmin/>:null}\r\n            {user && user.role === 'villa'? <MainVilla/>:null}\r\n            {user && user.role === 'customer'? <Link to={'/register'}>Register</Link>:null}\r\n        </main>\r\n    )\r\n}\r\n\r\nDashboardMain.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps,{})(DashboardMain);","import React from 'react';\r\nimport List from \"@material-ui/core/List\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport {logout} from \"../../actions/auth\";\r\nimport dashStyles from \"../../assets/style/dashStyles\";\r\nimport {useParams} from \"react-router\";\r\n\r\nconst SidebarDashboard = ({auth:{user},logout})=>{\r\n\r\n    const classes = dashStyles();\r\n    let {url} = useParams();\r\n    let pathUrlUser = ['Profile','test','Settings','editProfile'];\r\n    let pathUrlVilla = ['TambahRoom','profile','Settings','editProfile'];\r\n    let pathUrlAdmin = ['TambahRoom','materi','nilaiUser'];\r\n    const activeColor = (\r\n        window.location.pathname === '/dashboard' ? 'secondary':'inherit'\r\n    )\r\n    const customer =(\r\n        <section>\r\n            <List>\r\n                <Link to={'/dashboard'}  className={classes.navlink}>\r\n                    <ListItem button>\r\n                        <ListItemIcon ><DashboardIcon color={activeColor}/></ListItemIcon>\r\n                        <ListItemText primary='Dashboard' />\r\n                    </ListItem>\r\n                </Link>\r\n\r\n                <Link to={`/dashboard/soal`} className={classes.navlink}>\r\n                    <ListItem button>\r\n                        <ListItemIcon ><CreateIcon color={url === pathUrlUser[0] ? 'secondary':'inherit'}/></ListItemIcon>\r\n                        <ListItemText primary='Soal' />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to={'/dashboard/test'} className={classes.navlink}>\r\n                    <ListItem button>\r\n                        <ListItemIcon ><TimelineIcon color={url === pathUrlUser[1] ? 'secondary':'inherit'}/></ListItemIcon>\r\n                        <ListItemText primary='Hasil' color={url === pathUrlUser[1] ? 'secondary':'inherit'}/>\r\n                    </ListItem>\r\n                </Link>\r\n\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <ListItem button onClick={logout}>\r\n                    <ListItemIcon><ExitToAppIcon/></ListItemIcon>\r\n                    <ListItemText primary=\"logout\" />\r\n                </ListItem>\r\n            </List>\r\n        </section>\r\n    )\r\n    const villa =(\r\n        <section>\r\n            <List>\r\n                <Link to={'/dashboard'}  className={classes.navlink}>\r\n                    <ListItem button>\r\n                        <ListItemIcon ><DashboardIcon color={activeColor}/></ListItemIcon>\r\n                        <ListItemText primary='Dashboard' />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to={'/dashboard/profile'} className={classes.navlink}>\r\n                    <ListItem button>\r\n                        <ListItemIcon ><PersonIcon color={url === pathUrlVilla[1] ? 'secondary':'inherit'}/></ListItemIcon>\r\n                        <ListItemText primary='VillaProfile' color={url === pathUrlVilla[1] ? 'secondary':'inherit'} />\r\n                    </ListItem>\r\n                </Link>\r\n                <Divider />\r\n                <Link to={`/dashboard/TambahRoom`} className={classes.navlink}>\r\n                    <ListItem button>\r\n                        <ListItemIcon ><CreateIcon color={url === pathUrlVilla[0] ? 'secondary':'inherit'}/></ListItemIcon>\r\n                        <ListItemText primary='TambahRoom' color={url === pathUrlVilla[0] ? 'secondary':'inherit'}/>\r\n                    </ListItem>\r\n                </Link>\r\n\r\n                <Link to={'/dashboard/editProfile'} className={classes.navlink}>\r\n                    <ListItem button>\r\n                        <ListItemIcon ><TimelineIcon color={url === pathUrlVilla[3] ? 'secondary':'inherit'}/></ListItemIcon>\r\n                        <ListItemText primary='edit Profile'/>\r\n                    </ListItem>\r\n                </Link>\r\n\r\n            </List>\r\n            <Divider />\r\n            <Link to={'/dashboard/Settings'} className={classes.navlink}>\r\n                <ListItem button>\r\n                    <ListItemIcon >\r\n                        <SettingsIcon color={url === pathUrlVilla[2] ? 'secondary':'inherit'}/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary='Settings' />\r\n                </ListItem>\r\n            </Link>\r\n            <List>\r\n                <ListItem button onClick={logout}>\r\n                    <ListItemIcon><ExitToAppIcon/></ListItemIcon>\r\n                    <ListItemText primary=\"logout\" />\r\n                </ListItem>\r\n            </List>\r\n        </section>\r\n    )\r\n    const admin =(\r\n        <section>\r\n            <List>\r\n                <Link to={'/dashboard'}  className={classes.navlink}>\r\n                    <ListItem button>\r\n                        <ListItemIcon ><DashboardIcon color={activeColor}/></ListItemIcon>\r\n                        <ListItemText primary='Dashboard' />\r\n                    </ListItem>\r\n                </Link>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <Link to={'/dashboard/CreateWisata'}  className={classes.navlink}>\r\n                    <ListItem button>\r\n                        <ListItemIcon ><NoteAddIcon color={url === pathUrlAdmin[0] ? 'secondary':'inherit'}/></ListItemIcon>\r\n                        <ListItemText primary='Tambah Wisata' />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to={'/dashboard/materi'}  className={classes.navlink}>\r\n                    <ListItem button>\r\n                        <ListItemIcon ><LibraryBooksIcon color={url === pathUrlAdmin[1] ? 'secondary':'inherit'}/></ListItemIcon>\r\n                        <ListItemText primary='Materi' />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to={'/dashboard/nilaiUser'}  className={classes.navlink}>\r\n                    <ListItem button>\r\n                        <ListItemIcon ><BubbleChartIcon color={url === pathUrlAdmin[2] ? 'secondary':'inherit'}/></ListItemIcon>\r\n                        <ListItemText primary='Nilai' />\r\n                    </ListItem>\r\n                </Link>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <Link to={'/dashboard/createSoal'}  className={classes.navlink}>\r\n                    <ListItem button>\r\n                        <ListItemIcon ><NoteAddIcon color={url === pathUrlAdmin[0] ? 'secondary':'inherit'}/></ListItemIcon>\r\n                        <ListItemText primary='Create Soal' />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to={'/dashboard/materi'}  className={classes.navlink}>\r\n                    <ListItem button>\r\n                        <ListItemIcon ><LibraryBooksIcon color={url === pathUrlAdmin[1] ? 'secondary':'inherit'}/></ListItemIcon>\r\n                        <ListItemText primary='Materi' />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to={'/dashboard'}  className={classes.navlink}>\r\n                    <ListItem button>\r\n                        <ListItemIcon ><DashboardIcon color={activeColor}/></ListItemIcon>\r\n                        <ListItemText primary='Dashboard' />\r\n                    </ListItem>\r\n                </Link>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <ListItem button onClick={logout}>\r\n                    <ListItemIcon><ExitToAppIcon/></ListItemIcon>\r\n                    <ListItemText primary=\"logout\" />\r\n                </ListItem>\r\n            </List>\r\n        </section>\r\n    )\r\n\r\n    return (\r\n        user.role === 'admin' ? admin : null,\r\n        user.role === 'customer'? customer:villa\r\n    )\r\n}\r\nSidebarDashboard.propTypes ={\r\n    logout: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state =>({\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { logout})(SidebarDashboard);","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport DashboardMain from \"../../components/Dashboard/main/DashboardMain\";\r\nimport dashStyles from \"../../assets/style/dashStyles\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport SidebarDashboard from \"../../components/Dashboard/SidebarDashboard\";\r\n\r\nconst  Dashboard = ({\r\n    auth:{user,isAuthenticated,loading},\r\n    profile:{profile},\r\n    history\r\n})=> {\r\n    const classes = dashStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    if (!isAuthenticated){\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                color=\"secondary\"\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Dashboard\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <SidebarDashboard/>\r\n            </Drawer>\r\n            <DashboardMain/>\r\n        </div>\r\n    );\r\n}\r\nDashboard.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Dashboard);","import React, {useState} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from '../../../assets/style/useStyle';\r\nimport {Link} from \"react-router-dom\";\r\nimport {setAlert} from \"../../../actions/alert\";\r\nimport {register} from '../../../actions/auth';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Alerts from \"../../../components/Alert/Alerts\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Register = ({ setAlert, register,isAuthenticated,profile:{profile},history})=>{\r\n    const classes = useStyles();\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n    });\r\n    const [open, setOpen] = useState(false);\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const {email, password,password2 } = formData;\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if(password !== ''){\r\n            if (password !== password2) {\r\n                setAlert(\"Passwords do not match\", \"error\");\r\n            }else{\r\n                setOpen(!open);\r\n                register({email, password });\r\n            }\r\n        }else{\r\n            setAlert(\"The password must be filled in\",\"error\")\r\n        }\r\n    };\r\n    const setTime =(\r\n        setTimeout((e) => (\r\n            history.push(`/dashboard`)\r\n        ), 3000)\r\n    )\r\n    const registerIn  = (\r\n        isAuthenticated && setTime  ?\r\n            <Backdrop className={classes.backdrop} open={open} onClick={onSubmit}>\r\n                <div style={{textAlign:'center'}}>\r\n                    <h2 style={{marginBottom:'20px'}}>You are Logged in</h2>\r\n                    <CircularProgress color=\"secondary\" />\r\n                </div>\r\n            </Backdrop>\r\n            :clearTimeout(setTime)\r\n    )\r\n    if (isAuthenticated){\r\n        if (profile === null) {\r\n            history.push('/CreateProfile')\r\n        }\r\n        history.push('/dashboard')\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <div className={classes.paper}>\r\n                {!isAuthenticated ?\r\n                    <section>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Register\r\n                        </Typography>\r\n                        <Alerts/>\r\n                        <form className={classes.form} noValidate onSubmit={e=> onSubmit(e)}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                value={email}\r\n                                onChange={(e)=>onChange(e)}\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                autoFocus\r\n                            />\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={(e)=>onChange(e)}\r\n                                label=\"Retype Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password2\"\r\n                                value={password2}\r\n                                onChange={(e)=>onChange(e)}\r\n                                label=\"Retype Password\"\r\n                                type=\"password\"\r\n                                id=\"password2\"\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                            />\r\n\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                className={classes.submit}\r\n                            >Submit</Button>\r\n                            <Grid container>\r\n                                <Grid item xs={6}>\r\n                                    <Link to={'/'} style={{listStyle:'none',textDecoration:'none'}}>\r\n                                        <p>Forgot Password?</p>\r\n                                    </Link>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Link to={'/login'} style={{listStyle:'none',textDecoration:'none'}}>\r\n                                        <p>you have an account ?</p>\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </section>\r\n                    :registerIn}\r\n            </div>\r\n        </Container>\r\n\r\n    )\r\n}\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    alert:state.alert,\r\n    profile: state.profile,\r\n    auth: state.auth\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setAlert, register }\r\n)(Register);\r\n","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED,\n  GET_PROFILES,\n  GET_REPOS\n} from \"./types\";\n\n//Get current user's profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n//Get all user's profiles\n\nexport const getProfiles = () => async dispatch => {\n  //Clear what ever is in the current user's profile\n  dispatch({ type: CLEAR_PROFILE });\n\n  try {\n    const res = await axios.get(\"/api/profile\");\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Get profile by ID\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Get github repos\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Create or update a profile, history is for client side route\nexport const createProfile = (\n  formData,\n  history,\n  edit = false\n) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    //Post request to API/PROFILE\n    const res = await axios.post(\"api/profile\", formData, config);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n\n    if (!edit) {\n      history.push(\"/\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"error\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Add Experience for the User\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    //Post request to API/PROFILE\n    const res = await axios.put(\"api/profile/experience\", formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n    history.push(\"./dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Add Education for the User\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    //Post request to API/PROFILE\n    const res = await axios.put(\"api/profile/education\", formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert(\"Education Added\", \"success\"));\n    history.push(\"./dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Delete a user's experience\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/:${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert(\"Experience Deleted\", \"danger\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Delete a user's experience\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/:${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert(\"Education Deleted\", \"danger\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n//Delete the account and profile\n\n//Delete a user's experience\nexport const deleteAccount = id => async dispatch => {\n  //Confirmation of account deletion\n  if (\n    window.confirm(\n      \"Are you sure you want to delete your account? This is permanent.\"\n    )\n  ) {\n    try {\n      await axios.delete(`/api/profile/`);\n\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n\n      dispatch(setAlert(\"Account has been removed.\", \"danger\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  }\n};\n","import React, { Fragment } from \"react\";\r\nimport spinner from \"./SpinnerInterwind.gif\";\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img className='align-middle'\r\n             src={spinner}\r\n             style={{ width: \"50px\", margin: \"auto\", display: \"block\",position: 'absolute', left: '50%',top: '48%'}}\r\n             alt='Loading...'\r\n        />\r\n    </Fragment>\r\n);\r\n","import React, {Fragment, useEffect, useState} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport {createProfile, getCurrentProfile} from \"../../actions/profile\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router\";\r\nimport Spinner from \"../../assets/Spinner\";\r\nimport Alerts from \"../../components/Alert/Alerts\";\r\nconst CreateProfile = ({\r\n    auth:{\r\n        user,\r\n        loading,\r\n        isAuthenticated\r\n    },\r\n    profile,\r\n    createProfile,\r\n    getCurrentProfile,\r\n    history}\r\n)=>{\r\n    const [formData, setFormData] = useState({\r\n        fullname: \"\",\r\n        contact: \"\",\r\n        location: \"\",\r\n        status: \"\",\r\n        bio: \"\",\r\n        twitter: \"\",\r\n        facebook: \"\",\r\n        instagram: \"\"\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    const {\r\n        fullname,\r\n        contact,\r\n        location,\r\n        status,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        instagram,\r\n\r\n    } = formData;\r\n\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history);\r\n    };\r\n\r\n    const useStyle = makeStyles((theme) => ({\r\n        content: {\r\n            flexGrow: 1,\r\n            paddingTop: theme.spacing(6),\r\n            paddingBottom: theme.spacing(2),\r\n        },\r\n        background:{\r\n            background: theme.palette.secondary.light,\r\n            marginTop: theme.spacing(0),\r\n            borderRadius:'0',\r\n            minHeight:'100px'\r\n        },\r\n        textStyle:{\r\n            color: \"#fff\",\r\n            fontSize: 30,\r\n            textAlign:\"center\",\r\n            justifyContent:\"center\"\r\n        },\r\n        textField:{\r\n            width:\"100%\",\r\n            marginTop:10\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n    }))\r\n\r\n    const classes = useStyle();\r\n    useEffect(()=>{\r\n        getCurrentProfile()\r\n    },[getCurrentProfile])\r\n\r\n    if (isAuthenticated === false &&  profile && profile.profile !== null){\r\n        return <Redirect to={'/'}/>\r\n    }\r\n    const role =(\r\n            user && user.role !== 'villa' ?\r\n                <FormControl variant=\"outlined\" className={classes.textField}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Status</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        name=\"status\"\r\n                        value={status}\r\n                        onChange={e => onChange(e)}\r\n                        label=\"Status\"\r\n                    >\r\n                        <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={'Menikah'}>Menikah</MenuItem>\r\n                        <MenuItem value={'Belum Menikah'}>Belum Menikah</MenuItem>\r\n                    </Select>\r\n                </FormControl> :null\r\n        )\r\n\r\n    const setTime = (\r\n        setTimeout((e) => (\r\n            profile && profile.profile !== null ? history.push('/'):null\r\n        ), 3000)\r\n    )\r\n    return(\r\n        <Fragment>\r\n\r\n            {setTime ? loading && profile && profile.loading === true? <Spinner/>:\r\n            <main>\r\n                <Paper elevation={0} className={classes.background}>\r\n                    <Container>\r\n                        <Grid item xs={12} lg={12} md={12}>\r\n                            <Grid container>\r\n                                <Grid item xs={12} lg={12} md={12} style={{padding:'10px'}}>\r\n                                    <h1 className={classes.textStyle}>Create Profile's</h1>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                </Paper>\r\n\r\n                <Container>\r\n                    <Grid item xs={12} md={12} lg={12} style={{marginTop:20}}>\r\n                        <Grid container>\r\n                            <Grid item lg={3}>\r\n\r\n                            </Grid>\r\n                            <Grid item lg={6} xs={12}>\r\n                                <Alerts/>\r\n                                <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={(e)=>onSubmit(e)}>\r\n                                    <TextField\r\n                                        className={classes.textField}\r\n                                        id=\"standard-basic\"\r\n                                        label={user&&user.role === 'villa'?'Villa Name':'Fullname'}\r\n                                        variant=\"outlined\"\r\n                                        name=\"fullname\"\r\n                                        value={fullname}\r\n                                        onChange={e => onChange(e)}\r\n                                    />\r\n                                    <TextField\r\n                                        className={classes.textField}\r\n                                        id=\"standard-basic\"\r\n                                        label=\"contact\"\r\n                                        variant=\"outlined\"\r\n                                        name=\"contact\"\r\n                                        value={contact}\r\n                                        onChange={e => onChange(e)}\r\n                                    />\r\n                                    <TextField\r\n                                        className={classes.textField}\r\n                                        id=\"standard-basic\"\r\n                                        label=\"location\"\r\n                                        variant=\"outlined\"\r\n                                        multiline\r\n                                        rows={3}\r\n                                        rowsMax={5}\r\n                                        name=\"location\"\r\n                                        value={location}\r\n                                        onChange={e => onChange(e)}\r\n\r\n                                    />\r\n                                    <TextField\r\n                                        className={classes.textField}\r\n                                        id=\"standard-basic\"\r\n                                        label=\"bio\"\r\n                                        variant=\"outlined\"\r\n                                        name=\"bio\"\r\n                                        value={bio}\r\n                                        onChange={e => onChange(e)}\r\n                                    />\r\n                                    {role}\r\n\r\n                                {displaySocialInputs && (\r\n                                    <Fragment>\r\n                                        <FormControl className={classes.textField}>\r\n                                            <InputLabel htmlFor=\"input-with-icon-adornment\">Twitter</InputLabel>\r\n                                            <Input\r\n                                                id=\"input-with-icon-adornment\"\r\n                                                name=\"twitter\"\r\n                                                value={twitter}\r\n                                                onChange={e => onChange(e)}\r\n                                                startAdornment={\r\n                                                    <InputAdornment position=\"start\">\r\n                                                        <TwitterIcon/>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                            />\r\n                                        </FormControl>\r\n                                        <FormControl className={classes.textField}>\r\n                                            <InputLabel htmlFor=\"input-with-icon-adornment\">Facebook</InputLabel>\r\n                                            <Input\r\n                                                id=\"input-with-icon-adornment\"\r\n                                                name=\"facebook\"\r\n                                                value={facebook}\r\n                                                onChange={e => onChange(e)}\r\n                                                startAdornment={\r\n                                                    <InputAdornment position=\"start\">\r\n                                                        <FacebookIcon/>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                            />\r\n                                        </FormControl>\r\n                                        <FormControl className={classes.textField}>\r\n                                            <InputLabel htmlFor=\"input-with-icon-adornment\">Instagram</InputLabel>\r\n                                            <Input\r\n                                                id=\"input-with-icon-adornment\"\r\n                                                name=\"instagram\"\r\n                                                value={instagram}\r\n                                                onChange={e => onChange(e)}\r\n                                                startAdornment={\r\n                                                    <InputAdornment position=\"start\">\r\n                                                        <InstagramIcon/>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Fragment>\r\n                                    )}\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        type='submit'\r\n                                        size=\"small\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                    >\r\n                                        Save\r\n                                    </Button>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"inherit\"\r\n                                        size=\"small\"\r\n                                        className={classes.button}\r\n                                        onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n                                    >\r\n                                        Add Socials\r\n                                    </Button>\r\n                                </form>\r\n                            </Grid>\r\n                            <Grid item lg={3}>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </main>:clearTimeout(setTime)}\r\n        </Fragment>\r\n    )\r\n}\r\nCreateProfile.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile,\r\n    alerts:state.alert\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {createProfile,getCurrentProfile}\r\n)(CreateProfile);","import React, {useState} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from '../../../assets/style/useStyle';\r\nimport {login} from '../../../actions/auth';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {setAlert} from \"../../../actions/alert\";\r\nimport Alerts from \"../../../components/Alert/Alerts\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport dashStyles from \"../../../assets/style/dashStyles\";\r\n\r\nconst Login = ({login,isAuthenticated,history})=>{\r\n\r\n    const classes = useStyles();\r\n    const classess = dashStyles();\r\n    let a = JSON.parse(localStorage.getItem('RememberMe'));\r\n    const [isChecked, setChecked] = useState(a !== null ? a.isChecked : false);\r\n    const onChangeCheckbox = e => {setChecked(e.target.checked)}\r\n    const [formData, setFormData] = useState({\r\n        email: a!==null?a.email:\"\",\r\n        password: a!==null?a.password:\"\",\r\n    });\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const onChange = e =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const { email, password } = formData;\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        setOpen(!open)\r\n        login({email,password,isChecked})\r\n    };\r\n\r\n    const setTime =(\r\n        setTimeout((e) => (\r\n            isAuthenticated ? history.push(`/`):null\r\n        ), 3000)\r\n    )\r\n    const loggedin  = (\r\n        isAuthenticated && setTime  ?\r\n            <Backdrop className={classes.backdrop} open={open} onClick={onSubmit}>\r\n                <div style={{textAlign:'center'}}>\r\n                    <h2 style={{marginBottom:'20px'}}>You are Logged in</h2>\r\n                    <CircularProgress color=\"secondary\" />\r\n                </div>\r\n            </Backdrop>\r\n            :clearTimeout(setTime)\r\n    )\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <div className={classes.paper}>\r\n                <Alerts/>\r\n                {!isAuthenticated?\r\n                    <Typography component=\"h1\" variant=\"h5\" style={{marginBottom:'30px'}}>\r\n                        Login\r\n                    </Typography>:null\r\n                }\r\n                {!isAuthenticated ?\r\n                    <section>\r\n\r\n                        <form className={classes.form} noValidate onSubmit={e => onSubmit(e)}>\r\n                            <div>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    autoFocus\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    value={email}\r\n                                    onChange={(e)=>onChange(e)}\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"/>\r\n\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    value={password}\r\n                                    onChange={(e)=>onChange(e)}\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={<Checkbox value={isChecked} color=\"primary\"  checked={isChecked}  onChange={onChangeCheckbox}/>}\r\n                                    label=\"Remember me\"\r\n                                />\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classess.submit}\r\n                                >\r\n                                    Submit\r\n                                </Button>\r\n                                <Grid container>\r\n                                    <Grid item xs={6}>\r\n                                        <Link to={'/'} style={{listStyle:'none',textDecoration:'none'}}>\r\n                                            <p>Forgot Password?</p>\r\n                                        </Link>\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Link to={'/register'} style={{listStyle:'none',textDecoration:'none'}}>\r\n                                            <p>Don't have an account ?</p>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        </form>\r\n                    </section>\r\n                    :loggedin}\r\n            </div>\r\n            <Box mt={8}>\r\n\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    setAlert: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    auth: state.auth,\r\n    alerts:state.alert\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {setAlert, login }\r\n)(Login);\r\n","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport Dashboard from \"../views/Dashboard/Dashboard\";\r\nimport Register from \"../views/Home/Register/Register\";\r\nimport CreateProfile from \"../views/profile/CreateProfile\";\r\nimport Login from \"../views/Home/Login/Login\";\r\nconst Routes = ()=>{\r\n    return(\r\n        <section>\r\n            <Switch>\r\n                <PrivateRoute exact path=\"/dashboard\" component={Dashboard}/>\r\n                <PrivateRoute exact path=\"/dashboard/:url\" component={Dashboard}/>\r\n                <Route exact path=\"/register\" component={Register}/>\r\n                <Route exact path=\"/login\" component={Login}/>\r\n                <Route exact path=\"/CreateProfile\" component={CreateProfile}/>\r\n            </Switch>\r\n        </section>\r\n    )\r\n}\r\nexport default Routes;","import React, {Fragment} from 'react';\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport useStyle from \"../../../assets/style/useStyle\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../../actions/auth\";\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport {useHistory} from \"react-router\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nconst Navbar =({auth,isAuthenticated,logout})=>{\r\n    const history = useHistory()\r\n    const classes = useStyle()\r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            fontSize=\"small\"\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <ListItemIcon onClick={()=>{history.push('/dashboard')}}>\r\n                    <DashboardIcon fontSize=\"small\" />\r\n                    <Typography variant=\"inherit\" noWrap>\r\n                        Dashboard\r\n                    </Typography>\r\n                </ListItemIcon>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <ListItemIcon>\r\n                    <PersonIcon fontSize=\"small\" />\r\n                    <Typography variant=\"inherit\" noWrap>\r\n                        My Account\r\n                    </Typography>\r\n                </ListItemIcon>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <ListItemIcon>\r\n                    <SettingsIcon fontSize=\"small\" />\r\n                    <Typography variant=\"inherit\" noWrap>\r\n                        Settings\r\n                    </Typography>\r\n                </ListItemIcon>\r\n            </MenuItem>\r\n            <Divider/>\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <ListItemIcon onClick={logout}>\r\n                    <ExitToAppIcon fontSize=\"small\" />\r\n                    <Typography variant=\"inherit\" noWrap>\r\n                        Logout\r\n                    </Typography>\r\n                </ListItemIcon>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        isAuthenticated?\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <Badge badgeContent={4} color=\"secondary\">\r\n                        <MailIcon fontSize=\"small\" />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Messages</p>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                    <Badge badgeContent={11} color=\"secondary\">\r\n                        <NotificationsIcon fontSize=\"small\" />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Notifications</p>\r\n            </MenuItem>\r\n            <Divider/>\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <PersonIcon\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <PersonIcon />\r\n                </PersonIcon>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n        :<Menu\r\n                anchorEl={mobileMoreAnchorEl}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                id={mobileMenuId}\r\n                keepMounted\r\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                open={isMobileMenuOpen}\r\n                onClose={handleMobileMenuClose}\r\n            >\r\n                <MenuItem>\r\n                    <ButtonGroup variant=\"text\" color=\"inherit\" aria-label=\"text primary button group\">\r\n                        <Button variant=\"text\" color=\"inherit\" onClick={()=>{history.push('/login')}}>Login</Button>\r\n                    </ButtonGroup>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                    <ButtonGroup variant=\"text\" color=\"inherit\">\r\n                        <Button onClick={()=>{history.push('/register')}}>Register</Button>\r\n                    </ButtonGroup>\r\n                </MenuItem>\r\n            </Menu>\r\n    );\r\n\r\n    const authMenu= (\r\n        <section>\r\n            <div className={classes.sectionDesktop}>\r\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <Badge badgeContent={4} color=\"secondary\">\r\n                        <MailIcon fontSize=\"small\"/>\r\n                    </Badge>\r\n                </IconButton>\r\n                <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                    <Badge badgeContent={17} color=\"secondary\">\r\n                        <NotificationsIcon fontSize=\"small\" />\r\n                    </Badge>\r\n                </IconButton>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls={menuId}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleProfileMenuOpen}\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle fontSize=\"small\"/>\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.sectionMobile}>\r\n                <IconButton\r\n                    aria-label=\"show more\"\r\n                    aria-controls={mobileMenuId}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleMobileMenuOpen}\r\n                    color=\"inherit\"\r\n                >\r\n                    <MoreIcon />\r\n                </IconButton>\r\n            </div>\r\n        </section>\r\n    )\r\n    //Not Authentication User\r\n\r\n    const notauthMenu =(\r\n        <section>\r\n            <div className={classes.sectionDesktop}>\r\n                <ButtonGroup variant=\"text\" color=\"inherit\" aria-label=\"text primary button group\">\r\n                    <Button onClick={()=>{history.push('/login')}}>Login</Button>\r\n                    <Button onClick={()=>{history.push('/register')}}>Register</Button>\r\n                </ButtonGroup>\r\n            </div>\r\n            <div className={classes.sectionMobile}>\r\n                <IconButton\r\n                    aria-label=\"show more\"\r\n                    aria-controls={mobileMenuId}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleMobileMenuOpen}\r\n                    color=\"inherit\"\r\n                >\r\n                    <MoreIcon />\r\n                </IconButton>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n    return (\r\n        <Fragment>\r\n            <AppBar\r\n                color=\"secondary\"\r\n                position=\"fixed\"\r\n            >\r\n                <Container>\r\n                    <Toolbar>\r\n                        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                            Pariwisata\r\n                        </Typography>\r\n                        <div className={classes.search}>\r\n                            <div className={classes.searchIcon}>\r\n                                <SearchIcon />\r\n                            </div>\r\n                            <InputBase\r\n                                placeholder=\"Search…\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                                inputProps={{ 'aria-label': 'search' }}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.grow} />\r\n                        {isAuthenticated?authMenu:notauthMenu}\r\n                    </Toolbar>\r\n                </Container>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </Fragment>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps, { logout})(Navbar);","import React, {Fragment} from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useStyle from \"../../../assets/style/useStyle\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nconst Footer =()=>{\r\n    const classes = useStyle();\r\n    const datatext = \"Lorem Ipsum hanyalah teks tiruan dari industri percetakan dan penyusunan huruf. Lorem Ipsum telah menjadi teks boneka standar industri sejak tahun 1500-an, ketika sebuah printer yang tidak dikenal mengambil jenis galley\";\r\n    return (\r\n        <Fragment>\r\n            <footer className={classes.footer}>\r\n                <Container>\r\n                    <Grid item xs={12} lg={12} md={12}>\r\n                        <Grid container style={{padding:'10px'}}>\r\n                            <Grid item xs={12} lg={4} md={6} style={{padding:'10px'}}>\r\n                                <h1>Total User</h1>\r\n                                <Typography style={{textAlign:'justify'}} color='secondary'>{datatext}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} lg={4} md={6} style={{padding:'10px'}}>\r\n                                <h1>Materi</h1>\r\n                                <Typography style={{textAlign:'justify'}} color='secondary'>{datatext}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} lg={4} md={6} style={{padding:'10px'}}>\r\n                                <h1>Materi</h1>\r\n                                <Typography style={{textAlign:'justify'}} color='secondary'>{datatext}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </footer>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardItem:{\r\n        display:'inline',\r\n        alignItems:'center',\r\n        verticalAlign:'middle',\r\n        width:'100%',\r\n    },\r\n    root: {\r\n        maxWidth: 245,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nconst CardItems = (props)=>{\r\n    const classes = useStyles();\r\n\r\n    //\r\n    // const randomKamar = (room)=>{\r\n    //     let i = getRoom.length -1;\r\n    //     for (; i > 0; i--) {\r\n    //         const j = Math.floor(Math.random() * (i + 1));\r\n    //         const temp = getRoom[i];\r\n    //         getRoom[i] = getRoom[j];\r\n    //         getRoom[j] = temp;\r\n    //     }\r\n    //     return room;\r\n    // }\r\n    //\r\n    console.log(props.rooms)\r\n    // const randomRoom = randomKamar(getRoom)\r\n    return (\r\n        // <h1>etst</h1>\r\n        props.rooms.map((item,index)=> {\r\n            let desc = `${item.description}`\r\n            let descriptions = desc.slice(0,25)\r\n            return (\r\n                <Card className={classes.root} key={index}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            image={item.images[0].url}\r\n                            title=\"Contemplative Reptile\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                {item.roomName}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {descriptions}...\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h4\">\r\n                                Rp.{item.harga}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                            <FavoriteIcon/>\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"share\">\r\n                            <ShareIcon/>\r\n                        </IconButton>\r\n                    </CardActions>\r\n                </Card>\r\n        )})\r\n    );\r\n}\r\n\r\nexport default CardItems\r\n","import React, {Fragment, useState} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport dashStyles from \"../../../assets/style/dashStyles\";\r\nimport useStyle from \"../../../assets/style/useStyle\";\r\nimport './HomeDisplay.css';\r\nimport CardItems from \"./card/Card\";\r\n\r\nconst HomeDisplay = (props)=>{\r\n    const classes = dashStyles();\r\n    const classess = useStyle();\r\n    let rooms = props.room\r\n    const layout = (\r\n        <Grid container className={classes.root} spacing={0}>\r\n            <Grid item xs={12} lg={12} md={12} >\r\n                <Grid container >\r\n                    <Grid item xs={12} lg={3} md={3} className='box-left'>\r\n                        <Paper className={classess.paper} elevation={0}>\r\n                            <div className='boxLeft'>\r\n                                <h1>box left</h1>\r\n                            </div>\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={9} md={9}>\r\n                        <Paper className={classess.paper} elevation={0}>\r\n                            <div className='boxRight'>\r\n                                <CardItems\r\n                                    rooms={rooms}\r\n                                    // getRooms={props.room}\r\n                                    // getVilla={props.villa}\r\n                                    // getProfile={props.profile}\r\n                                />\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n    return(\r\n        <Fragment>\r\n            <div style={{minHeight:500}} className='layout'>\r\n                {layout}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default HomeDisplay","import React from 'react'\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst Header = (props)=>{\r\n    return (\r\n        <Paper className={props.classes.backgroundHeader} elevation={0}>\r\n            <Container>\r\n                <Grid item xs={12} lg={12} md={12}>\r\n                    <Grid container>\r\n                        <Grid item xs={12} lg={3} md={3} style={{padding:'10px'}}>\r\n                            <h1 className={props.classes.textColor}>Pariwisata Kab.Karawang</h1>\r\n                            <p className={props.classes.textColor}>Untuk memenuhi tugas perkuliahan</p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Header","import React, {Fragment, useEffect} from 'react';\r\nimport Navbar from \"../../components/Header/nav/Navbar\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport Footer from \"../../components/layout/footer/Footer\";\r\nimport dashStyles from \"../../assets/style/dashStyles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport HomeDisplay from \"../../components/layout/main/HomeDisplay\";\r\nimport useStyle from \"../../assets/style/useStyle\";\r\nimport {getAllRooms} from '../../actions/room'\r\n\r\nimport {getCurrentProfile} from \"../../actions/profile\";\r\nimport Spinner from \"../../assets/Spinner\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport {getVillas} from \"../../actions/villa\";\r\n\r\nconst Home = ({\r\n    auth,\r\n    getVillas,\r\n    getAllRooms,\r\n    getCurrentProfile,\r\n    room: {rooms},\r\n    profile,\r\n    villa,\r\n    loading\r\n})=>{\r\nuseEffect(()=>{\r\n    getVillas()\r\n    getAllRooms()\r\n    getCurrentProfile()\r\n},[getCurrentProfile,getAllRooms,getVillas])\r\n\r\n    const classess = dashStyles();\r\n    const classes = useStyle();\r\n\r\n    return (auth && auth.loading && loading ? <Spinner/>:\r\n        <Fragment>\r\n            <Navbar/>\r\n            <main className={classess.content}>\r\n                <Header classes={classes}/>\r\n                <Container>\r\n                    <HomeDisplay room={rooms} profile={profile} villa={villa}/>\r\n                </Container>\r\n\r\n            </main>\r\n            <Footer/>\r\n        </Fragment>\r\n    )\r\n}\r\nHome.propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    getVillas: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    getAllRooms: PropTypes.func.isRequired\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    auth: state.auth,\r\n    room:state.room,\r\n    profile: state.profile,\r\n    loading: state.profile.loading\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getCurrentProfile,\r\n        getAllRooms,\r\n        getVillas\r\n    }\r\n)(Home);\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n    GET_VILLA,\r\n    VILLA_ERROR,\r\n    GET_VILLAS,\r\n    GET_LIKES,\r\n    GET_LIKES_ERROR,\r\n    CLEAR_VILLA,\r\n    LOGOUT,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL\r\n} from \"./types\";\r\nimport {loadUser} from \"./auth\";\r\n\r\n//Login the user\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(\"/api/auth\", body, config);\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error =>\r\n                dispatch(setAlert(\"Incorrect Email or Password\", \"danger\"))\r\n            );\r\n        }\r\n\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n//Registers the user\r\nexport const register = ({ name, email, password}) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n    const body = JSON.stringify({ name, email, password, role:'villa'});\r\n\r\n    try {\r\n        const res = await axios.post(\"/api/users\", body, config);\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n        }\r\n\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n//Get current villa profile\r\nexport const getCurrentVilla = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get(\"/api/villa/me\");\r\n\r\n        dispatch({\r\n            type: GET_VILLA,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: VILLA_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n\r\n//Get all user's profiles\r\nexport const getVillas = () => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get(\"/api/v1/villa\");\r\n\r\n        dispatch({\r\n            type: GET_VILLAS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: VILLA_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const createVillaProfile = (\r\n    formData,\r\n    history,\r\n    edit = false\r\n) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        //Post request to API/PROFILE\r\n        const res = await axios.post(\"api/villa\", formData, config);\r\n\r\n        dispatch({\r\n            type: GET_VILLA,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(edit ? \"Villa Updated\" : \"Villa Created\", \"success\"));\r\n\r\n        if (!edit) {\r\n            history.push(\"/dashboard\");\r\n        }\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n        }\r\n\r\n        dispatch({\r\n            type: VILLA_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n\r\n//Get Villa by ID\r\nexport const getVillaById = villaId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/villa/profile/${villaId}`);\r\n\r\n        dispatch({\r\n            type: GET_VILLA,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: VILLA_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\nexport const getLikes = ()=> async dispatch=>{\r\n    try {\r\n        const res = await axios.get(\"/api/villa/likes\");\r\n\r\n        dispatch({\r\n            type: GET_LIKES,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_LIKES_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n//Logout Villa and clear the Villa\r\nexport const logout = () => dispatch => {\r\n    dispatch({ type: CLEAR_VILLA });\r\n    dispatch({ type: LOGOUT });\r\n};","import React, {Fragment, useEffect} from \"react\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport { loadUser } from \"./actions/auth\"\nimport setAuthToken from \"./utils/setAuthToken\"\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\nimport \"./App.css\"\nimport Routes from \"./routing/Routes\"\nimport Home from \"./views/Home/Home\"\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  return (\n\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact component={Routes}/>\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}